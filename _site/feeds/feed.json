[

    
        {
            "title": "PHD POSITION in Cloud Operations and Analytics",
            "content": "Huawei Technologies Duesseldorf GmbH\nGerman Research Center\nRiesstrasse 25\n80992 Munich\n\nDESCRIPTION\nWe are looking for PhD students interested in doing research in the field of Cloud Computing. The students will be fully supported as research assistants at the Huawei German Research Center under the supervision of Prof. Jorge Cardoso and a professor from the Technical University of Munich or Ludwig Maximilian University of Munich.\nThe position if fully funded for 3 years.\n\nRESEARCH TOPICS\nResearch areas include but are not limited to:\n\n\n  site reliability engineering.\n  planet-scale distributed systems monitoring.\n  cloud operations using analytics.\n  large-scale software predictive maintenance.\n\n\nQUALIFICATIONS\nAs a successful candidate you should hold a university degree (Master or equivalent) in Computer Science and knowledge in one or more of the following areas:\n\n\n  Distributed systems.\n  Cloud computing.\n  Machine learning.\n  Software reliability.\n  Stream data management.\n  Decision support systems.\n  Very good programming skills (C/C++, Java, Python).\n\n\nYou should be interested in solving challenging scientific problems, motivated for independent and goal-oriented research, and have a good level of written and spoken English.\n\nAPPLICATIONS\nIf you are interested, please send an e-mail to Prof. Jorge Cardoso with:\n\n\n  CV listing education background and publications (if any).\n  Undergraduate and master transcripts (if applicable).\n\n\nContact: http://jorge-cardoso.github.io/\nE-mail: firstname.lastname at huawei.com\n\nCLOSING DATE\nThe position will remain open until filled (this advertisement will expire on March 15, 2017).\n\nLOCATION\nHuawei German Research Center (GRC)\n80992 Munich\nGermany\n\nABOUT THE ADVISOR\nProf. Jorge Cardoso (see his website) obtained his PhD degree in Computer Science from the University of Georgia (US) in 2002.\nHe is Chief Architect for Cloud Operations and Analytics at Huawei GRC in Munich, Germany, and Professor at the University of Coimbra, Portugal.\nHe frequently publishes papers in first-tier conferences such as ICWS, CAISE, and ESWC, and first-tier journals such as IEEE TSC and Journal of Web Semantics.\nHe has published several books on distributed systems, process management systems, and service systems.\n",
            "link": "http://localhost:4000/blog/PHD_POSITION_in_Cloud_Operations_and_Analytics/",
            "date": "2016-11-27 09:01:01 +0100",
            "excerpt": null
        }
    

    
        ,{
            "title": "International Industry-Academia Workshop on Cloud Reliability and Resilience",
            "content": "The International Industry-Academia Workshop on Cloud Reliability and Resilience was held in Berlin on 7-8 November 2016. The workshop gathered close to 50 participants from industry (Intel, Red Hat, CISCO, SAP, Google, LinkedIn, Microsoft, Mirantis, Brocade, T-Systems,\nSysEleven, Deutsche Telekom, Flexiant, Hastexo) and academia (TU Wien, TU Berlin, U Oxford, ETH, U Stuttgart, TU Chemnitz, U Potsdam, TU Darmstadt, U Lisbon, U Coimbra).\n\nDuring two days, modern approaches for managing the reliability and resilience of cloud platforms and large-scale systems were discussed. The main topics under scrutiny were focused on site reliability engineering, fault injection testing, auto remediation, cloud\nstandards, and dependable cloud storage.\n\n\n\nDmitri Zimine (Brocade) giving his speech on workflows for auto-remediation (credits to Johannes Weingart).\n\nThe workshop also gathered a panel titled “What’s next for Cloud Reliability and Resilience: Challenges, Opportunities, Technologies, Theories, and More…” moderated by Dr. Goetz Brasche (Huawei), with the participation of Dr. Goetz Reinhaeckel (T-Systems), Dmitri Zimine (Brocade), Prof. Alysson Bessani (U Lisbon), and Sebastian Kirsch (Google).\n\nDuring the workshop, participants agreed that reliability and resilience are having an increasing importance for companies operating large-scale or planet-scale systems. Well-known service providers such as LinkedIn, Google, Uber, Dropbox, Salesforce, Netflix, and New Relic are all adopting concepts borrowed from Site Reliability Engineering (SRE), and have developed homegrown frameworks, techniques, and tools to run numerous services as efficiently and reliably as possible. Examples of techniques that were discussed\ninclude fault injection testing, workflows for auto remediation, and the use of multiple clouds to build dependable storage. Areas of interest which still need to be explored in the future include service level objectives and agreements, real-time monitoring and analytics, failure prediction, predictive maintenance, and automated recovery.\n\n\n\nSebastian Kirsch (Google), co-author of the bestselling book Site Reliability Engineering from Google, and the workshop organizer Jorge Cardoso (Huawei).\n\nThe presentations covered the following topics:\n\n\n  Building Blocks for Site Reliability, Sebastian Kirsch, Google, Switzerland.\n  Breaking Azure for Fun and Profit, Pavel Michailov, Microsoft, US.\n  Using Event-driven Automation and Workflows for Auto-remediation, Dmitri Zimine, Brocade, US.\n  High Availability and Disaster Recovery in OpenStack: From humble beginnings to enterprise reliability, Florian Haas, Hastexo, Austria.\n  A Tale of Ice and Fire, or: The Cloud and the Standards, Michel Drescher, University of Oxford, UK.\n  I’m No Hero: Full Stack Reliability at LinkedIn, Todd Palino, LinkedIn, US.\n  Dependable Storage and Computing using Multiple Cloud Providers, Alysson Neves Bessani, University of Lisbon, Portugal.\n  Cloud Based Fault Injection for Anomaly Detection, Craig Sheridan, flexiOPS, UK.\n\n\nWe would like to express our thanks, first of all, to the invited speakers for sharing their expertise with the audience. They were keystones of the program that we believe was exciting and of high quality. Next, we would like to thank the steering committee, who helped us with strategic guidance. Special thanks should be addressed to the organization and sponsorship of the event made by EIT Digital and Huawei German Research Center.\n\nGeneral Chair,\n\nProf. Jorge Cardoso, Huawei GRC, Germany\n\n",
            "link": "http://localhost:4000/blog/CloudRR2016/",
            "date": "2016-11-20 09:39:59 +0100",
            "excerpt": null
        }
    

    
        ,{
            "title": "PhD Student Grant/Scholarship",
            "content": "PhD Scholarship\nWe are offering a funded 3 years PhD position at the Department of Informatics Engineering of the University of Coimbra, Portugal, starting November 2016 or January 2017.\n\nResearch Area\nThe expected outcome of the research is the development of advanced data analytics services for Data Science orchestrated using the concept of micro-services and workflows. Services must be parametrisable and implement specific machine learning and prediction algorithms (e.g., SVM, deep learning, …). Services must also be dynamically composable into reusable workflows which can run on top of OpenStack using recent advances in the field of process management (such as Mistral or Airflow).\n\nCollaboration\nThe research will be conducted closely in collaboration with Prof. Jorge Cardoso of the Huawei German Research Center (GRC) in Munich, Germany. Results of the research will be tested in a large-scale computing platform such as the Open Telekom Cloud from Deustche Telekom. Collaboration will also be undertake with the University Institute of Lisbon ISCTE.\n\nUniversity of Coimbra\nThe University of Coimbra (UC) is a Portuguese public higher education institution with more than 700 years of experience in education, training and research. The first and the only Portuguese-speaking university until the early 20th century, UC has affirmed its position over the years with a unique mix of tradition, contemporaneity and innovation.\n\nSelection Criteria\n\n  Curricular elements (final average classification in the BSc and MSc degrees): 30%\n  Scientific curriculum (scientific publications, research projects, etc.): 20%\n  Proof of proficiency in data science and machine learning: 15%\n  Experience in similar R&amp;D projects: 7.5%\n  Motivation letter: 2.5%\n  Interview (if applicable: only the three top ranked candidates will be interviewed): 25%\n\n\nHow to Apply\nSend an e-mail to Prof. Rui Pedro Paiva (ruipedro@dei.uc.pt), with your CV containing clear information regarding the selection criteria, with “DS4NP grant” in the subject.\n\nClosing Date\nNovember 8, 2016\n",
            "link": "http://localhost:4000/blog/PhD_Scholarship_DataScience/",
            "date": "2016-10-29 13:39:59 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "International Industry-Academia Workshop on Cloud Reliability and Resilience ",
            "content": "International Industry-Academia Workshop on Cloud Reliability and Resilience\nNovember 7-8, 2016, Berlin, Germany\n\nOverview\nWith the increasing adoption and reliance on cloud platforms and services, it is undeniable that cloud computing is becoming a utility such as water, energy, transportation, or telecommunications. This status brings the responsibility for public providers to ensure the development of highly reliable platform and services.\n\nNonetheless, a study from Gartner found that 47% of all documented cloud problems were caused by service outages. Their duration ranged between 40 minutes and five days. Another study from Ponemon Institute found that outages on average cost US$ 690,204. To aggravate these results, the increasing use of commodity hardware to build data centers will negatively contribute and will lower the reliability of existing cloud computing platforms.\n\nThus, the development of new strategies, techniques, and methods to evaluate and increase the reliability and resilience of cloud platforms from a software perspective is fundamental.\n\nGoal\nThis workshop intends to bring together industry, academia, and regulators to identify the most relevant requirements in the field of cloud reliability and resilience, on one hand, and existing state-of-the-art solutions, on the other. We invite engineers, scientists, and experts to discuss and contribute to the creation of a new generation of highly reliable cloud platforms.\n\nTopics of Interest\nThe workshop places focus on the following topics:\n\n\n  Challenges of data center reliability\n  Methods and algorithms for failure prediction\n  Damage detection and problem diagnosis\n  Automated repair and recovery of cloud systems\n  Disaster recovery in cloud computing\n  Fault-injection as an approach for reliability\n  Evaluation of cloud platforms reliability\n  Cloud reliability metrics and benchmarks\n  Service Level Agreement (SLA) and reliability\n  Quality of Service in the cloud\n  Standards, regulations, and legislation\n\n\nGeneral Chairs\n\n  Henrik Abramowicz, EIT Digital, Germany.\n  Jorge Cardoso, Huawei ERC, Munich, Germany and University of Coimbra, Portugal\n\n\nSteering Committee\n\n  Dr. Götz Reinhäckel, Head of Cloud Engineering, T-Systems International, Germany.\n  Dr. Jeff Voas, US National Institute of Standards and Technology (NIST), US.\n  Prof. Paulo Esteves Veríssimo, University of Luxembourg, Luxembourg.\n  Michel Drescher, Cloud Computing Standards Specialist, University of Oxford, UK.\n  Valentina Salapura, Chief Architect, Resiliency and Business Continuity, IBM, US.\n\n\nInvited Speakers\n\n  Building Blocks for Site Reliability At Google, Sebastian Kirsch, Google, Switzerland.\n  Breaking Azure for Fun and Profit, Pavel Michailov, Microsoft, US.\n  Using Event-driven Automation and Workflows for Auto-remediation, Dmitri Zimine, Brocade, US.\n  High Availability and Disaster Recovery in OpenStack: From humble beginnings to enterprise reliability, Florian Haas, Hastexo, Austria.\n  A Tale of Ice and Fire, or: The Cloud and The Standards, Michel Drescher, University of Oxford, UK.\n  I’m No Hero: Full Stack Reliability at LinkedIn, Todd Palino, LinkedIn, US.\n  Resilient Cloud Storage – The Consistency View, Neeraj Suri, TU Darmstadt, Germany.\n  A Cloud is Not Enough, Reliable Delivery Matters More, Ajay Gulati, ZeroStack, US.\n  Dependable Storage and Computing using Multiple Cloud Providers, Alysson Neves Bessani, University of Lisbon, Portugal.\n  Cloud Based Fault Injection for Anomaly Detection, Craig Sheridan, flexiOPS, UK.\n\n\nLocation\n\nEIT Digital Berlin Co-Location Centre\n\n",
            "link": "http://localhost:4000/blog/Workshop-Cloud_Reliability-Resilience/",
            "date": "2016-07-11 13:39:59 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "Cloud Management Platforms (CMP) ",
            "content": "\nCloud Management Platforms (CPM) can operate at three levels: Infrastructure-as-a-Service (IaaS), Platform-as-a-Service (PaaS), and Software-as-a-Service (SaaS).\n\n\n  \n    At the IaaS level, CMP assist administrators to manage the physical infrastructure by providing management capabilities in the fields of pricing/billing, SLA management, scheduling, VM pool management, monitoring, and reservation. From the provider side, CMP allows better exploiting hardware virtualization and provides a more robust environment where executing third party applications. From the  customer side, it supports the construction of their infrastructure in the cloud.\n  \n  \n    At the PaaS level, CMP assist administrators to manage development and deployment platforms for running applications in the cloud. CMP manage the processes established to deploy applications to the IaaS, which include configuring application libraries, and compiling and debugging. While solutions to manage Web application are the most popular (e.g., Heroku and Google AppEngine), other solutions provide a platform for any type of application (e.g., GigaSpaces and Microsoft Windows Azure).\n  \n  \n    At the SaaS level, CMP assists administrators at managing applications provided through the Internet as a Web-based service, such as CRM, ERP, and social networking applications.\n  \n\n",
            "link": "http://localhost:4000/blog/Cloud-Management-Platforms-CMP/",
            "date": "2015-07-04 13:39:59 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "Evolution and Overview of Linked USDL",
            "content": "Last Thursday (05.02.2015), Prof. Jorge Cardoso presented the paper titled “Evolution and Overview of Linked USDL” at the 6th International Conference Exploring Services Science (IESS 2015), held in Porto, Portugal. The paper, written with Carlos Pedrinaci, reviews the evolution and provides an overview of Linked USDL, the comprehensive language that provides a multi-faceted description of services over the web.\n\nThe first attempts to develop USDL were made seven years ago, in 2008, and proposed a simple XML schema to capture the main characteristics of services. In 2011, technologies based on Ecore and EMF were used for modeling. To surpass existing limitations (e.g., rigidity and complexity) and to find a better alignment with web standards (e.g., HTTP and URI) motivated researchers develop Linked USDL, an approach based on Linked Data principles.\nIt was completed in 2013 and it is the fourth version of the language.\n\n\n  Jorge Cardoso and Carlos Pedrinaci, Evolution and Overview of Linked USDL. 6th International Conference Exploring Services Science, IESS 2015, Porto, Portugal, February 4-6, 2015, LNBIP, Vol. 201, Novoa, Henriqueta, Dragoicea, Monica (Eds.), 2015.\n\n",
            "link": "http://localhost:4000/blog/Linked-USDL/",
            "date": "2015-02-10 12:39:59 +0100",
            "excerpt": null
        }
    

    
        ,{
            "title": "Data Science for Non-Programmers",
            "content": "Background\nThe leading consulting company McKinsey estimates that there will be a shortage of data scientists to enable organizations to explore the full potential of big data. By 2018, the United States alone will face a shortage of 140,000 to 190,000 professionals with strong analytical skills with the know-how to analyze big data to make effective decisions. This shortage will be more dramatic in Portugal since, in contrast to US universities that provide Data Science degrees for several years (e.g., at Berkeley and Carnegie Mellon University), Portuguese universities are just making the first steps. In short, without Data Science professionals, the competitive advantage that big data can bring to Portuguese companies will remain untapped.\n\nThe Problem\nThis shortage of professionals cannot be mitigated easily since training students to become data scientists requires time and resources to teach skills from diverse knowledge areas such as Computer Science, Statistics, Business, and Data Visualization. Data scientists are involved across the full data lifecycle – from acquiring new data sets to making business decisions based on the knowledge discovered. They need to be skilled with programming languages (e.g., Python and Perl) to clean, integrate and transform data, and use complex programming packages (e.g., Scikit-Learn for analytics and MatPlotLib for visualization). Mastering this type of working environment is not easy.\n\nObjective\nA short term objective for companies will be to explore the use of visual programming paradigms to enable non-programmers to be part of the Data Science workforce.\n\nExisting Approaches\nIn contrast to existing approaches, which require programming, Scientific Workflow Management Systems (SWMS) can become an alternative to support the visual programming of data science projects. Such systems (e.g. Taverna and Kepler) use a simple graphical, graph-based structure to develop applications. This simplicity has shown to be suitable in several scientific areas such as bioinformatics, geophysics, and climate analysis.\n\nLimitation\nDespite the success of SWMS in data intensive research, they did not reach a state where non-programmers data scientists can use them. They still require some programming and scripting skills to code individual processing tasks. That is why research teams using those systems are usually composed of scientists and software developers. Thus, further research is required to remove any programming still required from these systems to make them suitable for non-programmers.\n\nProposed Approach\nCurrent SWMS need to be extended to support the parameterization of generic prebuild workflow templates. Workflow templates capture the processing tasks of data science projects. A template can be seen as a formalized best practice that data scientists can use to solve common data analysis challenges. Templates are developed by multidisciplinary teams of experts and reused by non-programmer data scientists, since they do not require programming. Parameterized workflows have been used successfully in the field of enterprise computing since 1970 to increase software reuse. For example, SAP became the largest software company in Europe by using parameterized workflows to automatize business process models. We claim that the same type of benefits can be obtained by parameterizing scientific workflow templates.\n\nImplementation\nApproaches based on templates can be implemented in SWMSs such as Taverna, an open source software tool for designing and executing workflows, which is used by 350 major research institutions worldwide. Platforms, such as ?myexperiment.org?, can be used for sharing workflow templates among data scientists.\n\nEvaluation\nNaturally, this systems need to be evaluated by data intensive organizations such as telecommunication providers and governmental agencies managing Open Data. Furthermore, hackathons can be ideal events to attract young participants, interested in developing science, business, and technology projects, to evaluate these new types of approaches.\n\nBenefits\nOn the one hand, workflow templates and SWMSs will be available for student and professionals to conduct data science experiments. On the other hand, such a project can generate a wealth of material – workflow templates, datasets, articles, code, and software – which will be used to prepare new hands-on courses on Data Science and SWMS to be offered at the university level.\n\n",
            "link": "http://localhost:4000/blog/Data-Science-4-NP/",
            "date": "2015-01-29 12:39:59 +0100",
            "excerpt": null
        }
    

    
        ,{
            "title": "Fundamentals of Service Systems",
            "content": "\n\t\n\tCardoso et al.. Springer 2015.\n\n\nSummary\n\nThis textbook addresses the conceptual and practical aspects of the various phases of the lifecycle of service systems, ranging from service ideation, design, implementation, analysis, improvement and trading associated with service systems engineering. Written by leading experts in the field, this indispensable textbook will enable a new wave of future professionals to think in a service-focused way with the right balance of competencies in computer science, engineering, and management.\n\nFundamentals of Service Systems is a centerpiece for a course syllabus on service systems. Each chapter includes a summary, a list of learning objectives, an opening case, and a review section with questions, a project description, a list of key terms, and a list of further reading bibliography. All these elements enable students to learn at a faster and more comfortable peace.\nFor researchers, teachers, and students who want to learn about this new emerging science, Fundamentals of Service Systems provides an overview of the core disciplines underlying the study of service systems. It is aimed at students of information systems, information technology, and business and economics. It also targets business and IT practitioners, especially those who are looking for better ways of innovating, designing, modeling, analyzing, and optimizing service systems.\n\nDistinctive aspects\n\n\n  \n    Integrates seamlessly the fields of service innovation, design, semantics, analytics, optimization, co-creation, markets, and research\n  \n  \n    Each chapter includes a review section with questions, a project description, a list of key terms, and further reading\n  \n  \n    Includes a preface written by Jim Spohrer, the Director of IBM Global University Programs and driving advocate of the Service Science, Management and Engineering initiative\n  \n  \n    Enables training of T-shaped professionals who must have a deeply developed specialty area (e.g., business management or computer science) as well as a broad set of skills and capabilities in the field of services (e.g., service design and optimization)\n  \n  \n    A companion website provides additional materials and activities to help lecturers use the text in their teaching and to help students practice and reinforce their learning independently\n  \n\n\nThis book is available at Springer.com and Amazon.com\n",
            "link": "http://localhost:4000/books/fundamentals-of-service-systems/",
            "date": "2015-01-01 12:39:59 +0100",
            "excerpt": null
        }
    

    
        ,{
            "title": "Service Systems: Concepts, Modeling, and Programming",
            "content": "\n\t\n\tCardoso, Lopes, and Geert. Springer 2014.\n\n\nThis SpringerBrief explores the internal workings of service systems.\n\nThe authors propose a lightweight semantic model for an effective representation to capture the essence of service systems. Key topics include modeling frameworks, service descriptions and linked data, creating service instances, tool support, and applications in enterprises. Previous books on service system modeling and various streams of scientific developments used an external perspective to describe how systems can be integrated. This brief introduces the concept of white-box service system modeling as an approach to model the internal aspects and elements of service systems. This approach provides descriptions that can be used for service management, optimization, and analytics.\n\nService Systems: Concepts, Modeling, and Programming is designed for researchers, teachers, and advanced-level students who want to learn about the new emerging field of service science and IS/IT practitioners who are looking for better ways to describe, model, and communicate services.\n\nThis book is available at Springer.com\n",
            "link": "http://localhost:4000/books/service-systems-concepts-modeling-and-programming/",
            "date": "2014-10-01 13:39:28 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "Gestao de Workflows: Modelos, Metodos e Sistemas",
            "content": "\n\t\n\tAalst and Hee (Translation: Cardoso). UC Press 2009.\n\n\nThis book offers a comprehensive introduction to workflow management, the management of business processes with information technology. By defining, analyzing, and redesigning an organization’s resources and operations, workflow management systems ensure that the right information reaches the right person or computer application at the right time. The book provides a basic overview of workflow terminology and organization, as well as detailed coverage of workflow modeling with Petri nets. Because Petri nets make definitions easier to understand for nonexperts, they facilitate communication between designers and users. The book includes a chapter of case studies, review exercises, and a glossary.\n\nThis book is available in Portuguese at uc.pt/imprensa\n",
            "link": "http://localhost:4000/books/gestao-de-workflows-modelos-metodos-e-sistemas/",
            "date": "2009-09-15 13:00:17 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "Handbook of Research on Business Process Modeling",
            "content": "\n\t\n\tCardoso and Aalst. IGI Global 2009.\n\n\nIn the last 10 years, there has been an explosion in the number of theories, technologies, standards, and tools providing business process support. At the same time, process support has taken an increasingly important role within information systems development (process-aware systems).\n\nThe conjunction of these factors has created a need among practitioners (e.g., researchers, system analysts, IT consultants, business analysts, and chief process officers) for a book providing a broad overview of this promising field from an academic and industrial perspective.\n\nTo achieve this goal, this handbook will bring together in one place contributions from leading experts, thereby guaranteeing a broad and diverse base of knowledge and expertise. The need for a comprehensive and authoritative book on Research on Business Process Modeling is latent among researchers from academia and industry and from workflow and BPM vendors. Stakeholders are often overloaded with a massive amount of BPM data available on the Web, but with no coherent 360? view of the field. When referring to general theory, techniques, and technologies, publications refer to an array of survey articles, with no reference standing out as an agreed-upon source of common ground.\n\nThis book is available at igi-global.com\n",
            "link": "http://localhost:4000/books/handbook-of-research-on-business-process-modeling/",
            "date": "2009-05-01 12:59:46 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "Semantic Web Engineering in the Knowledge Society",
            "content": "\n\t\n\tCardoso and Lytras. IGI Global 2008.\n\n\nThe main objective of the book is to lay the foundations for understanding the technologies behind the Semantic Web.\n\nOrganizations are striving for literature that guides them in the development of end-to-end applications and systems that use semantics. While the industry is willing to use semantics, the academia has not yet shown how to systematically employ Semantic Web technologies to deploy a new breed of systems.\n\nThe book aims to provide relevant theories, tools, and methodologies to develop semantic applications. It is written for students and professionals who want to improve their understanding of how semantics and ontologies can be used inside organizations. It also aims at studying the application of semantics to each of the steps in the semantic applications lifecycle and how semantics can help address critical issues in reuse, integration, and interoperability.\n\nThis book is available at amazon.com\n",
            "link": "http://localhost:4000/books/semantic-web-engineering-in-the-knowledge-society/",
            "date": "2008-10-10 12:59:29 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "The Semantic Web: Real World Applications from Industry",
            "content": "\n\t\n\tCardoso, Hepp, Lytras. Springer 2008.\n\n\nSemantic Web: Real-World Applications from Industry offers a glimpse into the opening door of semantic technologies by means of concentrated examples of semantic applications in real business environments.\n\nFor quite a while, there has been evidence from academic research and early industrial prototypes that semantic technology can help humans and machines substantially in accessing and using the unprecedented, and exponentially growing, amount of information that the World Wide Web provides. Now semantic technology is moving from academic and industrial research into real products and applications.  This book provides a series of case studies which demonstrate how real benefits can be derived from the adoption of semantic technology in popular business domains, such as telecommunication, B2B integration, healthcare, education, and others.\n\nSemantic Web: Real-World Applications from Industry summarizes state-of-the art expertise and practical experiences from outstanding technology showcases. This volume was written as a joint effort of leading experts in the field of semantic technology from various backgrounds and countries, including industry, academia, and government agencies. It combines a detailed description of the challenges and technical solutions with a discussion of the actual results and a wealth of lessons learned, which will be invaluable for future investments into semantic technology.\n\nSemantic Web: Real-World Applications from Industry was designed for industry professionals and researchers interested in the current state and future of semantic technology. This book is also suitable as a secondary advanced-level text or reference for students in computer science.\n\nForeword by Michael L. Brodie, Chief Scientist, Verizon Communications, Cambridge, USA\n\nThis book is available at Springer.com\n",
            "link": "http://localhost:4000/books/the-semantic-web-real-world-applications-from-industry/",
            "date": "2008-06-15 12:58:31 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "Programacao de Sistemas Distribuidos em Java",
            "content": "\n\t\n\tCardoso. FCA 2008.\n\n\nThe purpose of this book is to present the concepts and technologies needed to develop distributed systems in Java. It describes and illustrates how sockets, CORBA, RPC, Java RMI, and Web services can be used to design and implement distributed systems. This book is an indispensable compendium for BSc/MSc students and professionals involved with the implementation of distributed systems. The topics covered include:\n\n\n  Evolution of Computing Systems\n  Data Networks\n  Distributed Systems Architectures\n  DNS: the Domain Name System\n  Programming with Sockets\n  CORBA\n  Java Remote Method Invocation\n  Web Services\n\n\nThis book is available from fca.pt\n",
            "link": "http://localhost:4000/books/programacao-de-sistemas-distribuidos-em-java/",
            "date": "2008-03-15 12:11:38 +0100",
            "excerpt": null
        }
    

    
        ,{
            "title": "Semantic Web Services: Theory, Tools and Applications",
            "content": "\n\t\n\tCardoso. IGI Global 2007.\n\n\nThe Semantic Web proposes the mark-up of content on the Web using formal ontologies that structure underlying data for the purpose of comprehensive and transportable machine understanding. Semantic Web Services: Theory, Tools and Applications brings contributions from researchers, scientists from both industry and academia, and representatives from different communities to study, understand, and explore the theory, tools, and applications of the Semantic Web.\n\nSemantic Web Services: Theory, Tools and Applications binds computing involving the Semantic Web, ontologies, knowledge management, Web services, and Web processes into one fully comprehensive resource, serving as the platform for exchange of both practical technologies and far reaching research.\n\nThis book is available at igi-global.com\n",
            "link": "http://localhost:4000/books/semantic-web-services-theory-tools-and-applications/",
            "date": "2007-03-31 12:58:52 +0200",
            "excerpt": null
        }
    

    
        ,{
            "title": "Semantic Web Services, Processes and Applications ",
            "content": "\n\t\n\tCardoso and Sheth. Springer 2006.\n\n\nSemantics, Web services, and Web processes promise better re-use, universal interoperability and integration. Semantics has been recognized as the primary tool to address the challenges of a broad spectrum of heterogeneity and for improving automation through machine understandable descriptions.\n\nSemantic Web Services, Processes and Applications brings contributions from researchers who study, explore and understand the semantic enabling of all phases of semantic Web processes. This encompasses design, annotation, discovery, choreography and composition. Also this book presents fundamental capabilities and techniques associated with ontological modeling or services, annotation, matching and mapping, and reasoning. This is complemented by discussion of applications in e-Government and bioinformatics.\n\nSemantic Web Services, Processes and Applications is structured for research scientists and graduate-level students in computer science, as well as practitioners in industry.\n\nThis book is available at Springer.com\n",
            "link": "http://localhost:4000/books/semantic-web-services-processes-and-applications/",
            "date": "2006-08-15 12:59:09 +0200",
            "excerpt": null
        }
    



    
        {
            "title": "AIOps",
            "content": "Course DescriptionPrerequisites  Programming, operating systems, networks.Textbook  Distributed and Cloud Computing: From Parallel Processing to the Internet of Things, Kai Hwang, Jack Dongarra, Geoffrey C. Fox, Morgan Kaufmann, 2013.Learning OutcomesRecall (knowledge), interpret (comprehension), apply, analyse, create (synthesis), evaluate.      Understand the main concepts, key technologies, benefits, and characteristics of cloud computing.        Identify the architecture associated with cloud computing, including SaaS, PaaS, IaaS, public cloud, private cloud, and hybrid cloud.        Write a research paper and present the results.  Chapter 01 __ IntroductionSummary. The first chapter provides an introduction to the term ‘cloud’. What is the cloud? What is cloud Computing? Where is the cloud? Who is providing clouds? These are all questions you have probably heard and asked yourself. The term ‘cloud’ and ‘cloud computing’ is being used everywhere and often with a fuzzy meaning. Companies are quickly adopting cloud computing since it enables to outsource IT and allows to use the latest technologies without large invertment on infrastructure, software and IT staff. Examples of cloud services include Microsoft OfficeLive, DropBox, AppEngine, SalesForce VMforce, and Amazon EC2.Key points covered. What are cloud services? What is cloud computing? Business shift. Job market. Examples of cloud services.Material.  Lecture 1: Introduction.  Lab 1: Amazon AWS Hands-on.Chapter 02 __ ConceptsSummary. The second chapter covers important concepts which are fundamental to understand why cloud computing became so quickly widespread. One of the major benefits of the cloud comes for the economic model it delivers. Cloud service providers adopt a “pay as you go” or OpEx model which allows customers to pay only for what they use (similar to energy or waterwi). Customers do not need to own expensive assets (e.g., data centers, servers, or software), the CapEx. Naturally, the benefits of the cloud go beyond the economic model provided and also include additional positive aspects such as on-demand self-service, broad network access, and elasticity. Different types of software are made available to customers. While, nowadays, many classifications exist, one of the first taxonomies developed included only three main classes: Software as a Service (SaaS), Platform as a Service (PaaS), and Infrastructure as a Service (IaaS). Each type identifies which software is made available as a utility. For example, storage, hardware, servers, compilers and development environments, or office applications. Finally, cloud platform can be build for private use, these are called private clouds, or for public usage, these are called public clouds. A use of both types is called a hybrid cloud.Key points covered. Computing shift. Economical driver. Definition. Cloud characteristics. Deployment models. Delivery models. Examples. Inherent problems.Material.  Lecture: Cloud Computing Concepts.  Chapter 4: Cloud Computing Concepts (pp. 111-140). Mastering Cloud Computing: Foundations and Applications Programming, by Rajkumar Buyya, Christian Vecchiola, S.Thamarai Selvi, 2013.  Chapter 2: Electronic Services (pp. XX-XX). Fundamentals of Service Systems, Cardoso et al., Springer, 2015.  Lab 1: Amazon AWS: EC2.  Lab 2: Project Description.  Lab 2: Project Report Template.Chapter 03 __ Web APIsSummary. The dissemination and easy of use of web services and Application Programming Interfaces (API) has enables the edification of an API Economy. Companies can seamlessly work together by integrating their information systems using programming interfaces and provide they as web services. The technologies that made this possible live under the umbrella of distributed systems and correspond to two schools of thought: WS-* Services/SOAP and REST. WS-* Services and SOAP are based on traditional standards (XML, SOAP, HTTP, etc.) and REST where minimal middleware is necessary (only HTTP support is required). These two approaches provide the basic building blocks for cloud computing and are used by most platforms available in the market.Key points covered. The API Economy. Distributed Systems. WS-* Services. What is REST? REST and SOAP. REST principles. REST design guidelines.Material.  Lecture: Web API.  Lab 1: Boto and Amazon AWS.  Chapter 1: General Info (pp. 1-10). Python and AWS Cookbook by Mitch Garnaat, O’Reilly Media, 2011.  Chapter 2: EC2 Recipes (pp. 11-45). Python and AWS Cookbook by Mitch Garnaat, O’Reilly Media, 2011.  Chapter 3: S3 Recipes (pp. 47-63). Python and AWS Cookbook by Mitch Garnaat, O’Reilly Media, 2011.  Lab 2: REST and Django.  Chapter 4: Building a REST API (pp. 61-91). Lightweight Django by Julia Elman, Mark Lavin, O’Reilly Media, 2014.  Chapter 4: The Resource-Oriented Architecture (pp. 79-105). RESTful Web Services by Leonard Richardson and Sam Ruby, O’Reilly Media, 2007.Chapter 04 __ Cloud PlatformsSummary. Nowadays, there are three public cloud providers in field of IaaS: Amazon Web Services (AWS), Microsoft Azure, Google Cloud Platform, and IBM Bluemix. Other players are emerging. Examples include Open Telekom Cloud from Deutsche Telekom,  Telefonica’s Open Cloud, Alibaba, BT, NTT, Orange, Rackspace, Salesforce, etc. Amazon AWS is the leader by innovation and market share. Nonetheless, analysts believe that Microsoft Azure will soon overtake AWS. The AWS platform was launched in 2006. In 2016, it is composed of 35 Availability Zones (AZ) within 13 geographic Regions (e.g., Ireland, Frankfurt, Sao Paulo, Singapore, Tokyo, Sydney, Northern Virginia, Oregon). It has a rich spectrum of services from compute, storage, netowrking, analytics, mobile, developer tools, management tools, and security spaces. To programatically manage complex set ups in the AWS, several tools and and SDK libaries exist. For example, boto can be used to automate AWS services in Python. It allows to write scripts to provide programmatic connectivity to Amazon Web Services.Key points covered. Cloud Computing Offerings. AWS Platform (Compute Services, Storage Services, Communication Services, Additional Services). Tools and Kits. Billing and PricingMaterial.  Lecture: Cloud Platforms.  Chapter 9: Cloud Platforms in Industry (pp. 315-351). Mastering Cloud Computing: Foundations and Applications Programming, by Rajkumar Buyya, Christian Vecchiola, S.Thamarai Selvi, 2013.  Lab: Cloud Platforms: EC2, S3, SNS, SQS.  Overview of Amazon Web Services, Amazon AWS, Dec 31, 2015  AWS Simple Icons for Architecture Diagrams  AWS Essentials Student Guide 2.5, 2013.Chapter 05 __ Cloud Application DesignSummary. Cloud computing does not only provides a service-based access to virtual machines, more interestingly, it enables to create so called cloud-native applications. Applications that can be developed on a cloud platform, use the many resources available, run at scale with a high reliability, and avoid problems such as the Slashdot Effect. This requires new cloud architectures that depart from traditional enterprise application design to address requirements such as high availability, scalability, and elasticity. For example, IBM Cloud Architecture Center enables developers to understand how to quickly create new cloud native applications using Bluemix, IBM’s PaaS solution. The types of services provided by a cloud platform enable to develop architectures, e.g., with four tiers, which not easily engineered using traditional software platforms. Thus, architectures are evolving into Multitier architectures. Amazon AWS provides an infrastructure which contains the necessary ingredients to develop distributed system with high availability, scalability, and elasticity. Examples of key services include multiple zones, cloudwatch, auto-scaling, elastic load balancers, and message queues. To facilitate the development of native applications, companies and academia is looking into ways to identify and abstract generic architectures which can be reused across domains. Initiatives centered in patterns have been popular. Examples include, Microsoft Cloud Design Patterns, AWS Cloud Design Patterns, and the book Cloud Computing Patterns coming from the academia. Dependability, and in particular reliability, have gained importance since planet-scale cloud application need often to be available 24x7x52. Since native applications can be seen as complex systems with services, behavior, compositions, which are put together using an architectural style driven by decisions, existing concepts and theories from the field of software engineering can be used to evaluate the reliability of theories.Key points covered. Cloud-native applications. Cloud Architectures (One tier, Two tiers, Three tiers, Four tiers). High Availability Architectures. Scalable Architectures. AWS elements (EC2 Images, Elastic Load Balancing, Lunch Configurations, Auto Scaling Groups, Cloud Watch). Native cloud applications reliability.Material.  Lecture: Cloud Application Design.  Lab 1: Cloud Application Design.  Lab 2: Load Balancing.",
            "link": "http://localhost:4000/courses/aiops/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "AIOps",
            "content": "This page is in construction. You will certainly find errs.IntroductionIn planet-scale deployments, the Operation and Maintenance (O&amp;M) of cloud platforms cannot be done any longer manually or simply with off-the-shelf solutions. It requires self-developed automated systems, ideally exploiting the use of AI to provide tools for autonomous cloud operations. We rely on deep learning, distributed traces, and time-series analysis (sequence analysis) to effectively detect and fix anomalous cloud infrastructure behaviors during operations to reduce the workload of human operators.The iForesight system, labelled under the AIOps software category, is being used to evaluate new O&amp;M approaches. iForesight 3.0 is the result of 3 years of research with the goal to provide an intelligent new tool aimed at SRE cloud maintenance teams. It enables them to quickly detect and predict anomalies thanks to the use of artificial intelligence when cloud services are slow or unresponsive.ProblemThe operation of large-scale platforms serving millions of people often introduces complex and unique engineering challenges. Existing tools for monitoring IT infrastructures, networks and applications focus on collecting logs, metrics, events, and traces from distributed systems mainly for visualization. Nonetheless, the final goal of monitoring is to reach a level of technological development where we have tools that conduct root cause analysis with a high accuracy and enable to autonomously recover systems. To achieve this goal, we still need to shift from a data collection stage to an insight- and action-driven paradigm. One promising path to monitor planet- and large-scale platforms is to rely on advanced analytics and explore techniques from statistics, time-series analysis, data mining, natural language processing, graph processing, machine learning, and deep learning to extract insights from large volumes of monitoring data to support and drive recovery actions.Main challenges:  Scale. Large cloud providers can have more than 1 million physical servers. Each server has 2 CPUs. Each CPU has 10 VMs. Each VM has a OS and various applications.  Distribution. AZ and regions  Complexity. Microservices, containers, and serverless complexity. Several programming languages. Several teams.  Dynamism. Workloads around the sun, lunch and terminate instances. CMDB is static but VM is dynamic.ApproachThe mission of the Intelligent Cloud Operations SRE team (based in Munich, Germany) is to develop new AIOps systems and tools to analyze observability data from Huawei Cloudto detect impact to customers, identify the root cause within seconds, and fix the problem using the 1/5/10 rule (detection: 1 min, RCA: 5 min, recovery: 10 min).AIOps (Artificial Intelligence for IT operations) characterizes systems which use complex monitoring platforms, heterogeneous big data, machine learning (ML) and other artificial intelligence technologies to toubleshoot IT problems.The term can be viewed as the evolution of IT operations analytic andSoftware Analytics.The following figure from Gartner provides a high level architecture of the system we are building highliting the main areas of concern:  Real-time streaming and historical data, observations, Big Data, Machine Learning (ML), Anomaly Detection, Root-Cause Analysis, Performance Analysis, Predictive Maintenance, and Automation.In 2017 we adopted AI in the form of Data Science and Machine Learning approaches for anomaly detection, root-cause analysis, fault prediction, and automated recovery into our suite.These techniques, including statistical learning, time-series analysis, deep learning, big data,streaming, and data visualization, enabled us to develop new production-ready services for troubleshooting Huawei Cloud and detect issues which were previously undetectable.ChallengesThe challenges of operationalising AI are not limited to the understanding of deep learning or machine learning algorithms.Major challenges are related with software engineering, access and processing of large amounts of distributed data, model management, updating, deleting and training models on specialized GPUs and hardware, composition of workflowsfor orchestrating parallel jobs, and the visual management of models, workflows, and results.  Methods, techniques, and algorithms  AIOps platform constructionSystem Under the Microscope: Huawei CloudOur cloud has planet-scale technical requirements with an microservices architecture composed of hundreds of services.They are distributed over thousands of hosts in many geographical regions and operate with an availability higher than five nines.Our system monitors Huawei Cloud which is build on top of OpenStack, an opensource cloud operating system. OpenStack controls large pools of compute, storage, and networkingresources throughout tens of datacenters. The base services are predominantly written in Python and Java running on Linux.Huawei Cloud is one of the largest and fastest growing platforms in the world. It has a strong presence throughout the world with over 40 availability zones located across 23 geographical regions,ranging from Germany, France, South/Central America, Hong Kong and Russia to Thailand and South Africa.There are three properties that make platforms such as Huawei Cloud far more difficult to monitor and troubleshoot:  Amount of data and relationships which O&amp;M teams need to analyze.  Due to its distributed nature and complexity, system data has a low signal to noise ratio.  Since many different subsystems interact together, semantically reconciliating data is difficult.The strongest challenge for cloud architecture is design and operational complexity. Cloud deployments comprise thousands of geographically distributed services and microservices.Behavior patterns such as the Universal Law of Computational Scalability, make a distributed system highly non-linear and difficult to model.Underlying ArchitectureKey building block components which require a close monitoring include:The book The Datacenter as a Computer: An Introduction to the Design of Warehouse-Scale Machines, written by Google engineers, provide a very good description of the various parts which make up a data center.It also identifies that less than 10% of outages are caused by hardware, approximately 60% by software, and that operation and maintenance failure account for 20%.Troubleshooting ServicesSoftware that provides services to end users.  OBS. Object Storage Service is a stable, secure, efficient, cloud storage service  EVS. Elastic Volume Service offers scalable block storage for servers  VPC. Virtual Private Cloud enables to create private, isolated virtual networks  ECS. Elastic Cloud Server is a cloud server that provides scalable, on-demand computing resourcesTroubleshooting MiddlewareExamples:  Firewalls and VPNs  API Gateways (e.g., Kong)  Load Balancers (e.g., HAProxy)  Message Queuing Services(e.g., RabbitMQ)  Distributed Caches (e.g., Redis)  Web Servers(e.g., Apache)  Application Servers (e.g., EJB)  Database Servers (e.g., MySQL)For example, to troubleshoot a load balancer (LB), it is important to understand which components are being impacted. Load balancer metrics enable to measure the number and type of connections established, response time, and the quantity of data transfered across backend servers, listeners, and the balancer itself.The following metrics help to determine where to start an investigation to diagnose a load balancer and client issues:  Response time. Average response time of backend servers  Closed connections. Number of connections closed between the load balancer and backend servers.  5xx status codes. Number of HTTP 5xx responses received from backend servers.  Unhealthy backend servers. The number of unhealthy backend servers in the backend set.  Connection count. Number of incoming client requests to the load balancer.The metric closed connections can be used to evaluate if a large-scale system has enough services running to handle the incoming load. And, the 5xx status codes or unhealthy backend servers may provide evidence that the last deployment introduced a bug.Many databases externalize different status metrics to help operators to troubleshoot errors and identify performance issues. Typical metrics include server resources, backend disk storage, query statistics, and cache issues.CouchDB website provides a detailed description of the metrics which can be used to troubleshooting.Example of statistics metrics include:  requests/sec. Total number of requests processed per second.  selects/sec. Total number of SELECT requests processed per second.  request time. Average end-to-end time to process a query.  service time. Average time to execute a query.Troubleshooting PlatformSoftware which typically abstracts the hardware of physical server.  Linux ServersTroubleshooting HardwareAs another example, datacenter use server systems assembled with commodity DRAM memory protected against errors by storing redundant information and applying ECC to detect and correct errors. Nonetheless, a relatively recent study shows that event with ECC techniques, memory chip failures cause significant downtime in datacenters DRAM Errors in the Wild: A Large-Scale Field Study. The main reason seems to be due to packaging and circuit problems. Thus, monitoring DRAM module to detect and predict anomalies is relevant for AIOps.  Network Switches and Network RoutersService offeringsBesides these building blocks which are part of the base cloud infrastructure, service offerings also need to bemonitored:  Compute, network, storage. Cloud servers, auto scaling, object storage, volume service, VPC network, and CDN,  Databases. MySQl, PostgreSQL, and replication service.  Security. Vulnerability scan service, SSL management, and Anti-DDoS.  Applications. APM, API Gateway, and application orchestration.  Enterprise Intelligence. Machine learning services, graph engines, face and image recognition, and Mapreduce.  DevCloud. Project management, build, code hub, code check, and code release.Solutions Required for Troubleshooting  Switch failure  HDD failures  Service anomaly detection/prediction. Using log analysis, trace analysis, and metric analysis  Cluster failure predictionAIOps Platform ConstructionAn AIOps platform architecture consists of functional layers such as:  Big Data processing. Real-time processing of streaming and historical data.          In-memory databases. (e.g., Gorilla)      Distributed log system. (e.g., LogDevice)        Data pipeline. Connected data processing elements ingesting data from multiple sources.  Library of algorithms: Statistical functions, classical machine learning, and deep learning algorithm.  Automation. Use runbooks and RPA technology to automate repetitive tasks.  User interface. Allows IT operations teams t interact with the platform and quickly identify issues and apply corrective actions.For 2019-2020, our work focuses on points 1)-3).AIOps does not only requires new methods and techniques from the fields of statistics and ML, but it also needs online and offline big data infrastructure (such as Hadoop, HBase, Spark, Gobblin, Presto) to ingest and processscale monitoring data which can reach several PB/day. For example, Facebook uses Presto for interactive queriesover their 300PB data stores.iForesight is build using the following software stack and applications.  Frontend: Grafana, Jupyter, Node.js  AI: Tensorflow, Keras, PyTorch, Pandas/NumPy, Scikit-learn, Huawei Model Arts  Backend: Microservices, Docker, MySQL  Big Data: OpenTSDB, Hive, ArangoDB, HBase, Elastic Search, Spark Streaming.  Transport: Kafka  Data sources: metrics, app logs, tracing, alarms, topologies, and change events  Agents: StatsD, cAdvisor, FluentD  Language: PythonIn 2019, we will closely following the progresses make in the following 5 fields to extend our stack and suite:  AIOps,Service Mesh,Istio,Distributed Tracing,SRE,RPAMonitoring systemThe presentation “A Tale of One Billion Time Series” describes how Baidu.com monitors its large-scale search platform.In 2018, the number of metrics collected has grown to 1 billion.  Millions hosts, services, instances  600+ metrics per target on average  1.000.000.000 time series (and the number os still increasing)Looking at 1B time series from another angle brings the following requirements:  Volume. 50TB (1.000.000.000.000 bytes) per day (read a point of 4 bytes every 5 minutes=288*4=1152)  Requests. 10M r/w requests per second  Points. 40M in and 60M out per second  Traffic. 50Gbps write and 100 Gbps readPerformance requirements are:  Latency: &lt; 10s  99th response time: &lt;= 500ms  Availability (SLA): = 99.99%          Uses Hot standby      StorageThe metrics are stored in a time-series database (TSDB) with three layers:  Memory database based on Redis stores hot data          The query engine determines if to access HBase or Redis                  If the query is for data older than one day, it will query HBase, otherwise Redis                    Data in Redis is compressed. The algorithm is from Facebook.        HBase stores warm data          Performance degradation: lots of compactation and splitting      Intolerable r/w latency in underlying HDFS      HBase balances random writes and sequentially access disks                  Buffers writes and flushes writes into multiple HFiles (append only)          Read may need to scan all HFiles (disk seeks)                    Compactation                  Compactation merges HFiles to accelerate read          HBase tables are split into chunks of rows called “regions”          Region will be split into two when it becomes too big          Regions are distributed and can be moved across servers to balance load          Problem with compactation: Consumes a lot of I/O; causes JVM stop the world GC; Block writes          Solution: Partition data by date                    Handling splitting                  Pre-splitting                      HDFS stores cold data          Need to reduce R/W latency      Put region server and data node together in the same node      The base architecture was optimize for high frequency read/writes:  Write. Use batch and asynchronous techniques to the write path.  Read. Customized data model with multi-layer down-sampling mechanism into HBase and use compression for in-memory databaseThe major challenge is the data scale.Read and writeThe architecture has two separate modules working on top on HBase to improve efficiency:  Query engine. Specialized read module  Saver. Specialized write moduleData layoutData table:  data point: target, metric, time, value          Use as a row key: hash(target) + hash(metric) + hash(rounded to 2 hours)      Each row contains two hours of data      Each row has a constant length: 7190      Design inspired by OpenTSDB        data expires according to TTLMetadata tables and index:  Metric properties are: name, cycle, value type  Tags: isp, dc, etc.  Index: tag -&gt; time seriesChallenges  Large queries are slow (and take a large bandwidth)          Daily resource usage report of all the hosts (CPU, MEM, IO, etc.)                  Billions of data points requests                    PV Growth trend of the whole year                  Millions of data points requests                      &lt;20% critical data attract &gt;80% small queries          PV anomaly detection (needs data of recent hours)        Query patterns          Latency insensitive                  Short-term (a lot of metrics); long-term (high resolution)          Daily resource usage report of all the hosts          There one day available to process these queries          Solution: Avoid HBase bandwidth exhaustion -&gt; copy data to an external Hadoop asynchronously                    Latency sensitive                  Short-term (high resolution)          long-term (low resolution): trend data important for business          PV’s growth trend visualization of the whole year          PV’s anomaly detection          Solution: Multi-level down-sampling                          Down-sampling: High resolution -&gt; Low resolution              Multi-level: 2 levels. A query for one year can be answer in a few milliseconds              Online pre-aggregation (max, min, sum, count) within Saver in real-time                                          Methods, techniques, and algorithmsExploring SRE Pain PointsAfter identifying a pain point, we identify the following elements to develop a solution:  Existing manual workflows for troubleshooting for automatization  Key golden metrics which can enable an effective anomaly detection  Data sources for root cause analysis  Manual recovery actions  Critical components which requires special monitoring infrastructureData IngestionMonitoring systems and monitoring data is the corner stone of troubleshooting.Their goal is to track of the health status of components and applications.Traditional and well-known systems include Ganglia and Nagios.Monitoring data comes from many different data sources such hypervisors, OS, applications, application servers, middleware, databases, application logs, host and network metrics.Generally, data sources can be classified in four types:  Logs. Service, microservices, and applications generate logs, composed of timestamped records with a structure and free-form text, which are stored in system files.  Metrics. Examples of metrics include CPU load, memory available, and the response time of a HTTP request.  Traces. Traces records the workflow and tasks executed in response to an HTTP request.  Events. Major milestones which occur within a data center can be exposed as events. Examples include alarms, service upgrades, and software releases.Examples:  2017-01-18 15:54:00.467 32552 ERROR oslo_messaging.rpc.server [req-c0b38ace - default default] Exception during message handling  {“tags”: [“mem”, “192.196.0.2”, “AZ01”], “data”: [2483, 2669, 2576, 2560, 2549, 2506, 2480, 2565, 3140, …, 2542, 2636, 2638, 2538, 2521, 2614, 2514, 2574, 2519]}  {“traceId”: “72c53”, “name”: “get”, “timestamp”: 1529029301238, “id”: “df332”, “duration”: 124957, “annotations”: [{“key”: “http.status_code”, “value”: “200”}, {“key”: “http.url”, “value”: “https://v2/e5/servers/detail?limit=200”}, {“key”: “protocol”, “value”: “HTTP”}, “endpoint”: {“serviceName”: “hss”, “ipv4”: “126.75.191.253”}]  {“id”: “dns_address_match“, “timestamp”: 1529029301238, …}{“id”: “ping_packet_loss“, “timestamp”: 152902933452, …}{“id”: “tcp_connection_time“, “timestamp”: 15290294516578, …}{“id”: “cpu_usage_average “, “timestamp”: 1529023098976, …}ExamplesGoogle SRE team proposed 4 Golden Signals which provide key insights on how a distributed system is running using metrics:  Latency. Time to handle a request (aka response time)  Traffic. How much demand is being placed on a system  Errors. Rate of requests that fail  Saturation. Constraints places on service resourcesOther proposals include the RED and USE methods.When key services are not often called by users, the volume of metrics collected is insufficient for pattern recognition and anomaly detection.In such cases, synthetic monitoring (also known as active monitoring) can be adopted and consists in creating artificial users to simulate user behavior by making automatedcalls to services.An AIOps platform needs to be able to ingest logs, metrics, traces, and events into efficient key-value databaseswhere they are stored to later be accessed and analyzed.Challenges:  Resolution. While reading data sources every minute is relatively easy to achieve, as systems become more complex, non-linear, and with an large customer base, fine grained metrics are needed. Often, one second polling resolution is required since anomalies and uncommon patterns that occur in a one minute interval are invisible.To get the monitoring data needed, SRE need to write new tools, patch existing systems, and add knobs to production platforms to control their behavior.Distributed TracingTrends:  Monoliths to microservices  Basic concurrency to async concurrency to distributed concurrency  Complexity  Span Categorization PatentDistributed tracing enables understanding how systems’ components interact together when handling incoming requests.It has its root on early research on concepts such as X-Trace and Magpie, and was generalized in industry with Google paper Dapperin 2010.Trace events can be generated across software stacks and within a software stack.Many companies supported by large-scale systems, such as Uber and Facebook, operate large scale distributed tracing systems to gain observability capabilities.Opensource:  OpenTelemetry  W3C Distributed Tracing Working GroupIndustry Solutions:  Facebook          FBTrace (node trace model), trace filter, trace datastore, Canopy (stream processing for traces), Scube      Compare populations of traces (e.g., before and after releases, perf regression)        Uber          One request has 30 services and 100 RPCs      Use tracing for root cause analysis      Compare trace structures (just like Code Diff) – saseq      Compare span durations (heat map of latencies) – LMU      Challenge:                  Individual traces can be an outlier          Users must find the right baseline                          Create a statistical model from an aggregate of traces                                          Benefits:                  Uber can solve problems from 30 minutes to 2 minutes                    Pattern RecognitionThe objective of approaches for pattern recognition is to detectpatterns in noisy and high-dimensionality data. Once the data is collected, we apply probabilistic algorithms, ML and other techniques to find suspicious patterns.Examples of patterns of interests include:  Latency outliers and latency trends in metrics  Gradual degradation of traffic and incoming calls  Spikes or sudden change in error rate in logs  Saturation of memory utilization &gt;95% memory  Structural changes in tracesFor metrics, pattern recognition can rely on feature-based time-series analysis to identify interpretable insights of their structure.Patterns of interests are not always a synonym of an anomaly or a failure. Often, a pattern is associated with aprobability that something is possibly wrong. By correlating patterns from multiple data sources, we increase the confidence (precision and recall) that a failure is indeed under way.For example, we can autonomously identify anomalous microservices’ latencies by dynamically choosingtemporal features, predict memory leaks ahead of time before impacting systems, or finding rare message entries in service logs with billions records. We applies all these techniques to real-time data streams.As another example, although distributed logging is a solved problem and many solutions already exist, what still needs to be mastered is the extraction of meaningful and actionable information from massive logs.While many argue that “the more [data] the merrier”, in reality, the more log statements you have, the lessyou can find due to noise and non-determinism.With the success of developing pattern recognition for anomaly detection in 2017-2018, in 2019 we are planningthe next phase of our next-gen monitoring and troubleshooting suite. We will extend supported patterns by implementing new detector services for distributed trace and service logs.All the anomaly detectors contribute with results to a central knowledge repository of metric, trace, and log observations, and alarms and relevant external events (e.g., platform upgrades).Challenges  Multimodal metrics. Since distributed systems are composed of many subsystems, it is expected to observe Gaussian mixture modelsrepresenting normally distributed subpopulations generated by the subcomponents. When subpopulation assignment is not known, unsupervised learning can be used to determine the subpopulation a data point belongs to. If the number of components is known, expectation maximization (EM) can be used to estimate the mixture model’sparameters, and, afterwards run a clustering algorithm.Nonetheless, the number of components is unusably not known. Furthermore, the distribution of data points is often notGaussian.  Direct and indirect metrics. CPU load, available memory, network resources, and IO are direct signal host-levelmetrics.On the other hand, the response time of a service call to a microservice provisioned by n distributed componentsis an indirect signal service-level metric. As its values dependent on the health of the subcomponents and thesubset of components involved during the handling of the request.Indirect metrics are far more complex to analyze when compared to direct ones.  Variability. Due to the large number of components presents in a large-scale systems, the variability of latency is high. The reasons of this variability in individual components of a service is well known and in the Communication of the ACM article The Tail at Scale.Sources of variability include the existence of daemons, shared resources, garbage collection, queueing, and energy management. Techniques such as replication, sharding, and load-balancing all contribute to increase the entropyof a complex system.Inductive InferenceWhile the patterns recognized correspond to the symptoms of an underlying problem, inductive inferenceexplores the problem space and tries to identify the faulty services or resources.Inductive reasoning draws a conclusion by gathering together particular observations (i.e., patterns discovered) in the form of premises and reasons from these particular premises to a general conclusion.Troubleshooting, root-cause analysis, tuning, and capacity planning are particular forms of inference.A semi-supervised machine learning system will analyzean observed pattern repository to automatically infer complex incidents associated with failures and explain the underlying possible root-cause to SREs and operators. This inference will learn associations between patterns, alerts and external events which will be formalized as rules and stored in a knowledge-based system. On top, a smart assistant will help operators in making associations and decisions on the relationship between patterns, alerts and anomalies for root-cause analysis.Several techniques can be for inductive inference , e.g.:  Traffic analysis: Correlation between sudden increase in requests and slashdot effect, with increase latency of requests.  Trace analysis: Component or dependency failure, structural trace analysis, response time span analysis.  Event analysis: Causality between upgrades, reconfigurations, and forklift replacements and failure.Inference can also decide to run automated diagnostics scripts (runbooks) to gain additional insights of the current state of components, services, or systems to improve inference.For example, when pattern recognition identifies an HTTP endpoint with a high latency associated with an anomaly by analysing metrics, distributed traces are immediately analysed to reveal exactly which microservice or component is causing the problem.Its logs and context metrics are accessed to quickly diagnose the issue. Afterwards, when sufficient evidence characterizing the problem is collected, inference will nominate operations and remediation actions to be executed.Challenges  Access to customer systems is not possible to calibrate models: use Transfer learning  Model localization: the same model is adapted to different contexts  How to improve model based on running and field information  Fuzzy Logic.Determining that a service is in a failed state is rather simple. The challenge is to determine if the current state of a service is in the gray zone between the ok and failed states. For example, analyzing a service which passes all the basic health checks, but is unable to complete client requests according SLOs for 5% of requests, is far more difficult.  Masking. Complex distributed systems that use load balancing components to increase reliability and scalabilitymake the detection of anomaly more difficult since their object is to mask problems from end users. Thus, if an AIOps system is looking at a distributed system from the user perspective, it may not be able to easilyidentify health problems.Automated OperationsThe most common use of operations is to solve problems. Operations (actions) can be automatically triggered in response to troubleshooting workflows.For example, once methods for pattern recognition and inference are mastered, the next step is to look into auto-remediation. As knowledge on failure modes is gained, failure patterns are identified and recovery is encoded into automated remediation scripts. Often, only simple failure cases can be handled but this constitute a very good starting point for more complex scenarios.Examples include rebooting a host, restarting a microservice or hung process, free disk space, and remove cached data. As knowledge on running systems accumulates, auto-remediation becomes pervasive to service owners which can define their own recovery actions.Other types of operations relevant to AIOps include:  Capacity planing  Canarying validation  Service scaling  Performance analysis  Intelligent troubleticket routing  Predictive maintenanceEvaluationWe evaluate the techniques and algorithms we built using a 3-level approach:  Synthetics data. We built models simulating microservice applications which are able to generate data under very specific conditions. The scenarios simulated are usually difficult to obtain when using testbeds and production systems. The controlled data enables a fine-grained understanding of how new algorithms behave and are an effective way for improvement and redesign. Nonetheless, the type of traffic that is generated in production istypically not captured by synthetic data.  Testbed data. Once an algorithm passes the evaluation using synthetic data, we make a second evaluation using testbed data. We run an OpenSack cloud platform under normal utilization. Faults are injected into the platform andwe expect algorithms to detect anomalies, find their root cause, predict errors, and remediate failures.Service calls from normal production can be used to trigger the calls of the testbed.  Production data. In the last step of the evaluation, we deploy algorithms in planet-scale production systems. This is the final evaluation in an environment with noise and which generally makes algorithms generate many false positives. Accuracy, performance and resources consumption is registered.Many public datasets are also available to conduct comparative studies:  Anomaly detection datasets: Harvard,Oregon State,Numenta  Outliers datasets: Stonybrook, LMU,ELKI  Cluster datasets: Alibaba clusterdata,Google Cluster Data  Yahoo webscope  Azure Public Dataset  LogPai datasets  Timeseries classificationChallenges  Obtain support to make datasets available so that researchers can develop new approaches  Generate positive and negative samples automatically  Sparse training samples  Hard to obtain data from clients environmentsApplications and Use CasesSystems and Subsystems analysisWe are particularly interested in exploring how complex IT systems can be decomposed into subsystems to be analyzed.While algorithms and techniques to analyze metrics and time series generated by single targets (e.g., CPU and I/O) are fundamental and constitute building blocks for anomaly detection and root-cause analysis, our previous research as shown that using single metrics tend to generate too many false positives for non-linear and noisy systems.Thus, instead, we seek to analyze subsystems (e.g., HAProxy or OBS’s microservices) as a whole by developing machine learning algorithms which consider many metrics and other monitoring data sources such as:CPU load, response time, closed connections, 5xx status codes, requests/sec, selects/sec, request time, and service time.Anomaly DetectionFor large-scale, dynamic IT infrastructures, detecting problems is a complex task since its behavior becomes too complex to understand.Without special tools, operators need to manually analyze different monitoring, configuration, trace, log, and other data. Techniques for anomaly detection allow to automatically discover potential problems by analyzing data generated by the monitoring infrastructure and raising alarms when unusual conditions are meet. This is especially important for planet-scale systems, where it is desirable to have teams which can scale while maintaining quality of service and SLOs.Anomaly detection approaches are classified into two types:  Reactive. Algorithms detect anomalies after they happen.  Proactive. Solutions predict upcoming anomalies when a system is a normal state.Techniques can be classified:  Model-based approaches describe system performance or system states.Problems are recognized by deviations from models capturing a normal behavior.  Correlation-based approaches learn normal behavior by analyzing the correlations which exist between components’ metrics over time.  Statistical-based approaches analyze the normal distribution of data points and monitor distribution patterns at runtime.Techniques:  Metrics. Time series analysis for multimodal and univariate/multivariate data.      Logs. Classifiers can be trained to detect anomalies in application logs. Since records are often not labelled, the challenge is to build predictive model trained with the normal sequences of log records which reflect a normal execution or behavior of a distributed system. The model can be used to detect anomalies when the sequence of records significantly differ from the learned sequences.One of the first works in this field can be traced back to 2009.Xu et al. proposed to parse logs and analyse source code using information retrieval approaches to create features which are analyzed using machine learning to detect problems. More recent approaches, for example, Zhang et al.,Du et al., andBrown et al., use logs to generate feature sequences which are fed into an LSTM to, afterwards, detect anomalies of hardware and software applications.    Traces. Graph-based techniques.The article On Predictability of System Anomalies in Real World provides an illustrative example on how hard drive failures can be predicted.Multimodel metric anomaly detectionMultimodal metrics are often a symptom that part of a system build for reliability has a performance degradation,possibly due to a failure. The use of clustering algorithms for multimodal anomaly detection are an interesting approach. The latent groupingsare found by finding a partition that separates the moniroting data into unimodal subsets that are more coherentthan the unpartitioned superset.Univariate/multivariate anomaly detectionTo detect servers which are outliers, Netflix uses the clustering algorithm DBSCAN. Using a self-service paradigm, service owners identify one metric to be monitored for outliers.The troubleshooting system runs DBSCAN to analysis metric windows which returns the set of servers considered outliers.Service owners also specify the minimum timeframe for a deviation to be considered a true positive outlier.Netflix solves the parameter selection challenge inherent to most algorithms by only asking service owners to define the current number of outliers. Using simulated annealing, the distance and minimum cluster size parameters are determined.Results show a precision of 93%, recall: 87%, F-score: 90% for pools of almost 2K servers.Following the approach path from Netflix, other researchers have extended the approach by using several metrics. While the results were more modest, the software system at hand was more complex.To come…using tsfresh and Random ForestsDiagnosis  Dependency Inference exploits the relationships between components and the communications between microservices to localize the causes of problems since failure often propagate across distributed systems. Early work in this field include the research by Attariyan at al.More recent proposal include the research from Mace.  Correlation Analysis explores the correlations between the metrics generated by different components. A correlation implies a relationship which can be followed to find a root cause.  Similarity Analysis detects and localize problems by comparing behaviors of components, under the assumption that in normal state they should perform similarly. For example, in a cluster, the server with an outlier behavior is the problematic component. The assumption is that the majority of servers in a cluster are fault-free.Alarm DeduplicationLarge-scale, complex IT infrastructures can generate tens to hundreds of alarms and represent one of the most important challenges for operators. One unique problem can suddenly inundated an operation with 20-30 alarms in response to a database failure. In such situations, the alarms system become a nuisance rather than a useful tool.Alarm deduplication (also known as alarm suppression) is a class of management techniques which groups alarms related to the same underlying problem. It transforms a set of related alarms into one or two notifications that really matter. In some cases, it is possible to identify the key alarm, core of the problem, and establish a relationship with the root cause.Techniques:  Flood analysis  Correlation and causality analysisCapacity PlanningRefers to the capture of metric records relevant to understanding workloads and utilization trends to devise future capacity plans, and resource poll capacity forecast.Examples of metrics to track include:  vCPU number, vRAM allocation, and compute load  Storage allocation and I/O latency  Network trafficFore casting becomes challenging when holidays, multiple seasonalities need to be considered.Incident Response  Alerting  TroubleshootingWhen a root cause is matched with an alarm or anomaly, AIOps can initiate and orchestrate a remediation workflow and route a description of the root cause to the most adequate expert team for change, problem, and incident management following ITIL best practices.AI can act as a matchmaking and routing system by using multi-criteria techniques to identify in real time the right teams based on on-call schedules, location and expertise.Additionally, AIOps can use NLP techniques to index relevant documentation to assist operation teams to remediate an issue.Early work in this field include the research fromCandea et al.which show how to reduce downtime of applications by automatically recovering from transient and intermittent software failures.Security ManagementWhile anomaly detection is frequently employed to detect unusual patterns in monitoring data related to IT infrastructure problems, the same techniques can be use to detect patterns typically associated with a variety of security risks such violations, unauthorized access, and malicious activities.Machine learning algorithms can process netflow metrics, control plan traces, and application and network equipmentlogs for the analysis. AIOps brings increased benefits when threats are complex and multi-dimensional, since their interpretation by human is hard and time consuming.Resource OptimizationTo come….Root Cause Analysis  Proactively find anomalies before failures are reported  Perform audit trails and root cause analysis (RCA)Infrastructure Scaling  Configure predictive scaling that learns from the previous load conditions and usage patternsCost Management  Forecast the cost of infrastructure (VM or IT)  Intelligent cost mng. in an important feature of public cloudsReal time application behavior learning  Learns the behavior of application using trace patterns, log status messages, and performance metrics.Performance Tuning  Auto tuning of workloads by analyzing the time taken for common tasks such as responding to a request and apply an accurate fix to the problemTechniques:  Message Queuing analysis. Message queue length is a good metric for system health analysis.The length of queue of connecting microservices are constantly monitored and an alert is sent out if their size goesbeyond a predefined threshold. Either generate alerts on the size of single queues or a sum of message queues.Energy Efficiency  Manual  DVS Dual voltage papersMemory and SSD anomaly detectionto comeAlarm deduplicationto comeExisting SystemsIndustry  Tracing: Lightstep, Google StackDriver,Amazon X-Ray  APM: New Relic, AppDynamics,Dynatrace, Azure Application Insights,CA APMAcademiaTo come…Research MethodologyWe will follow a KPI-driven development for the new approaches and algorithms devised by the project. This means that we will always implement first a baseline algorithm to clearly demonstrate the limitations of existing approaches.Afterwards, for each incremental enhancement we make to the new algorithm, we will quantify the improvement using ROC AUC, F1 Score, etc.Team and CultureSeveral researchers have contributed to iForesight, namely, llya Shakhat, Paul Staab, Wei Guangsheng, Jinxunmi,Sasho Nedelkoski, Alexander Wieder, Yi Feng, Florian Richter, Francesco del Buono, Phani Pawan, and Ankur Bhatia, among others.Our skill set encompasses expertise in the fields of:  AI/Data Science (time series analysis, regression, decision trees, pattern recognition, probability theory and neural networks),  Software Engineering (analysis, design, development, testing), and  Operation (deployment, infrastructure).Our culture of innovation and R&amp;D is based on 4 main guiding principles:  DIY,KISS,Deep Work*, KPI-driven Research*(Time Spent) x (Intensity of Focus)",
            "link": "http://localhost:4000/research/aiops_white_paper/",
            "date": null,
            "excerpt": null
        }
    

    

    
        ,{
            "title": "Cloud Reliability and Resilience",
            "content": "OverviewReliability is a measure of the percentage uptime of cloud services to customers, considering the downtime due to faults. Many cloud providers are setting a reliability level of 99.95% (download uptime cheat sheet).This means that if you provision a VM it will be available 99.95% of the time, with a possible downtimeof 21.6 minutes per month. Reliability is an important characteristic which enables platforms to adapt and recover under stress and remain functional from a customer perspective. You can find additional information from a Meetup meeting on Cloud Reliability and Resilience.Every year big companies made the headlines for the wrong reason: reliability problems. In Q1 2016, Microsoft (9 days), Twitter (8h), Apple (7h), are PayPal (7h) are the “lucky” winners:  Two separate outages meant Microsoft’s biggest customers haven’t had access to email for several days.  Twitter Went Down Because of an ‘Internal Code Change’.  eBay, Etsy and Online Merchants Hit by PayPal Outage  Apple Pay suffers first wobble with seven-hour outage. Problem saw Visa users unable to sign up to iPhone payments service.According to section of IEEE Society working on Reliability, “reliability engineering is adesign engineering discipline which applies scientific knowledge to assure that a system will perform its intendedfunction for the required duration within a given environment, including the ability to test and support the systemthrough its total lifecycle (…) it is the probability of failure-free software operation for a specified periodof time in a specified environment.”Cloud resiliency is the ability of a cloud platform or service to recover and continue operating when failures occur. Automated means for recovery are the most desirable solutions.Open Positions  MSc thesis. Reliability of OpenStack usign Fault Injection  MSc thesis. Intelligently Instrument OpenStack.  PhD student. OpenStack Reliability  PhD student. Data Science.  PhD student. Orchestration of cloud services/microservices.  Permanent position. Cloud Reliability Engineer  Permanent position. OpenStack Software Engineer  Permanent position. Junior/Senior Researcher Large-scale Distributed SystemsOpenStack Cloud OSOpenStack is a cloud operating system (Cloud OS) for building public and private clouds. It can control pools of compute, storage, and networking recourses located in large data centres. It is supported by major IT players in the world which include IBM, HP, Intel, Huawei, Red Hat, AT&amp;T, and Ericsson. At Huawei Research we are currently developing the next generation of reliable cloud platforms for Deutsche Telekom. The Open Telekom Cloud engineeredby Huawei and operated by T-Systems was launched at CeBIT 2016 and delivers flexible and convenient cloud services.Major players are building competences in the field of cloud reliability. Microsoft Trustworthy Computing has a division dedicated to Reliability and IBM offers specialized Resiliency Services to assure continuous business operations and improve overall reliability.Cloud reliability and resilience of OpenStack can be analyzed and improved at 3 levels:  Level 1. OpenStack paltform and services  Level 2. Hypervisor and virtual machines (VM) managed  Level 3. Applications running inside VMsWe concentrate our efforts on Level 1.General Problems with Building Large-scale Distributed SystemsReliable large-scale distributed systems are hard to build since their validation is time consuming, complex, and often non-deterministic. OpenStack is not an exception. Research from Microsoft with MODIST (Junfeng Yang, et al., MODIST: Transparent Model Checking of Unmodified Distributed Systems Proceedings of the6th Symposium on Networked Systems Design and Implementation (NSDI ‘09), Pages 213-228) exemplifies well theproblems associated with general distributed systems. Experiments found a total of 35 bugs in Berkeley DB,a Paxos implementation, and a primary-backup replication protocol implementation. Thus, validation, testing, and benchmarking frameworks are needed, specifically, when OpenStack is used to support mission critical applications.Building large-scale distributed systems requires the consideration of several theories, technologies, and methodologies, such as:  CAP Theorem  Microservices  Twelve Factor AppAvailable Approaches (Industry solutions, Patents, Research Papers)Fault Injection  Fault-injection technologies or FIT provides approaches to demonstrate that software is robustness and fault tolerance by injecting faults to damage internal components to test its fault tolerance.  Domenico Cotroneo and Henrique Madeira. Introduction to software fault injection. In Domenico Cotroneo, editor, Innovative Technologies for Dependable OTS-Based Critical Systems, pages 1–15. Springer Milan, 2013.  Haissam Ziade, Rafic A Ayoubi, Raoul Velazco, et al. A survey on fault injection techniques. Int. Arab J. Inf. Technol., 1(2):171–186, 2004.  (Graph-based) In Towards a Fault-Resilient Cloud Management Stack, the authors use execution graphs to monitor and observe the processing of external requests. Intrumentation is done between openStack and the hypervisor, the database, REST, HTTP, and AMQP. Server-crash faults are injected by killing relevant service processes via systemd.  (Graph-based) In HANSEL: Diagnosing Faults in OpenStack, the auhtors intercept AMQP and REST messages to reconstruct an execution graph. The approach requires network monitoring agents at each node in the OpenStack deployment. One of the challenges is the so-called transaction stitching to reconstruct full transactions to recreate the execution graph.  (String-based) In Toward achieving operational excellence in a cloud and US20150161025 A1: Injecting Faults at Select Execution Points of Distributed Applications , the authors rely on the operating system level information to build message traces by observing system events such as SEND or RECV system calls (or LIBC calls). These events are monitored per thread since with higher granularities (i.e., process-level or system-level), the job of separating events is difficult. Message sequences are converted into string of symbols and strings are comapred using an edit distance function. High distances indicate possible anomalies between executions.  DICE Fault Injection: A tool to generate faults within Virtual Machine. Under development.  Lineage-driven Fault Injection by Peter Alvaro, Joshua Rosen, Joseph M. Hellerstein UC Berkeley, Proceeding SIGMOD ‘15.  New Functional Testing in etcd. CoreOS uses a fault-injection framework to simulate the most common cases of failures that the system etcd may meet in real life.      To guarantee HA, LinkedIn simulates data center failures and measure the effects. To improve response time and lower the cost of operations, they have built the Nurse system, a workflow engine which enables to define tasks to recover automatically from failures.        The book Resilience and Reliability on AWS provides  a motivation and a few examples (for beginners) on the importance of reliability. The author shares their experience to achieve resilience and reliability with code examples to monitor Redis or MongoDB. The use of simple techniques to solve the complex problem of reliability of clouds clearly indicates that current solutions are limited and further systmathic approaches are needed.        Microsoft proposed the Resilience Modeling and Analysis (RMA) methodology. It is an approach for improving resilience adapted from the industry-standard technique known as Failure Mode and Effects Analysis (FMEA).    Fault Injection at Cloudera uses fault-injection tools and elastic-partitioning techniques for the continuous improvement and verification of their Hadoop ecosystem (CDH) via an extensive QA process during the software-development life cycle.  OpenStack Reliability Testing describes an abstract methodology for OpenStack cluster high-availability testing and analysis.Anomaly Detection  (Process-based) In Experience report: Anomaly detection of cloud application operations using log and cloud metric correlation analysis (2015), the authors present an approach to detect anomalies by correlating data &amp; events extracted from logs and metrics generated by Amazon AWS. While the approach is interesting, the level of detail provided by Amazon logging system does not enable to gain an insightful view and prediction of failures.  (Path-based) In patent Diagnosing distributed applications using application logs and request processing paths and Patent US9069668, the authors inject faults into the so-called transaction path, detecting a writing action to a log of the distributed application. When a failure occurs, the path is marked as problematic.  Generic approaches for reliability such as Fault Tree Analysis (FTA), Root cause analysis (RCA), Failure mode and effects analysis (FMCA), Cause–effect graphs, Ishikawa diagram, Five whys, etc.TracingTraditional monitoring solutions for cloud platforms and applications, such as Cloudwatch from Amazon AWS, Ceilometer from Openstack, and Nagios, place emphasis on component-based monitoring. Existing solutions collect detailed information on system statistics about virtual machines, CPU, disk IO, hosts, RPC, etc.Component-based monitoring tools provide not information into the relationship between the components of a distributed service. Since debugging a distributed system is a danting task using these tools, cross-component monitoring (tracing) solutions were explored to aliviate exisitng limitation by tracing the path of events and method calls that are generated at runtime.The study from Sambasivan, Raja R., et al. titled So, you want to trace your distributed system? Key design insights from years of practical experience (Vol. 102. Technical Report, CMU-PDL-14, 2014) provides a very good overview of tracing systems developed up to 2014, and include the analysis of X-Trace, Magpie, Dapper, etc. The thesis from Nathan Scott of the Monash University, Australia, titled [Unifying Event Trace and Sampled Performance Data] (http://pcp.io/papers/unifying-thesis.pdf) also give a fairly good overview of these main tracing systems.  X-Trace from Berkeley outputs a set of task graphs according to Lamport’s happens before relation to trace the execution path of a distributed system. It does not rely on physical clocks and uses low level primitives for instrumentation (e.g., xtr::logEvent(string), xtr::logEvent(“end”), pushdown(), and pushnext()).  Magpie from Microsoft infers traces by combining event logs generated by low level black-box instrumentation. It automatically extracting individual requests from a running system and constructs a probabilistic workload model. Magpie relies on experts with deep knowledge about the system to construct a schema of how to correlate events in different components. In contrast to other approach (from Google, Twitter, and Cloudera), it infers causal relations from the events generated by the operating system and application instrumentation.  Dapper from Google focuses on library and middleware modifications and provides a special context to track execution across async callbacks and RPCs.  HTrace from Cloudera is a tracing framework intended for use with distributed systems written in java. It is similar to Dapper and performs end-to-end tracing to capture detailed paths of causally between events generated by the components which make a distributed system.  Zipkin from Twitter is also a distributed tracing system. It helps gather timing data needed to troubleshoot latency problems in microservice architectures. Zipkin’s design is based on the Google Dapper.  Distributed Tracing at Netflix with Salt Dependency and tracing from Netflix.  Jaeger and Tracing HTTP request latency. The approach from Uber on tracing (similar to Dapper and Zipkin).  Openstracing OpenTracing is an open distributed tracing standard for applications. Since distributed tracing is important for large-scale distributed systems management and complex services architectures, OpenTracing was created in 2016 to address the standardization problems from instrumentation.Netflix uses SalpFacebook uses mystery machinehttps://www.usenix.org/system/files/conference/osdi14/osdi14-paper-chow.pdf  Methods and Systems of Distributed Tracing and US 20140215443 A1 Application and US 9135145 B2 Grant by Rackspace Us, Inc. (Sept 2015). A system and methods are provided for distributed tracing in a distributed application by observing messages sent and received among components of the distributed application, generating a probabilistic model of a call flow, and constructing a call flow graph based on the probabilistic model for the distributed application.  Mike Y. Chen, Anthony Accardi, Emre Kiciman, Jim Lloyd, Dave Patterson, Armando Fox, and Eric Brewer. 2004. Path-based faliure and evolution management. In Proceedings of the 1st conference on Symposium on Networked Systems Design and Implementation - Volume 1 (NSDI’04), Vol. 1. USENIX Association, Berkeley, CA, USA, 23-23.Monitoring  Eliot A Python library for Logging for complex distributed systems  Monitoring without Infrastructure @ Airbnb Airbnb uses logstash, statsd, NewRelic, Datadog, and their own open-sourced configuration-as-code alerting framework for monitoring.  RefStack. RefStack provides users in the OpenStack community with a Tempest wrapper, refstack-client, that helps to verify interoperability of their cloud with other OpenStack clouds. It does so by validating any cloud implementation against the OpenStack Tempest API testsOther tools from the field of APM (Application Performance Management), such as NewRelic limite their span to monitor the performance of transactions across web application stacks.Repair and RecoveryAutomation is having an important role in making the management of cloud data centers automated and ‘automatic’. The principals underlying Google SRE and DevOps all call for automation. For cloud reliability and resilience, the procedures to repair the IT infrastructure need to be encoded into executable processes. Large-scale distributed monitoring (dapper), stream and events (spark and flink), and time-based databases (prometheus) provide the base to identify important event that when flagged as alarms need to trigger encoded procedures to repair faulty systems. An important question is ‘How to encode procedures to repair IT infrastructure automatically?’Huawei’s ApproachEnsuring the reliability of large-scale, complex distributed cloud platform requires new innovative approaches. While NetFlix’s ChaosMonkey proposed a new tool (and concept) for site reliability engineers, it only enables the analysis of cloud native applications. Since at Huawei we are developing highly reliable cloud platforms (e.g., Openstack), the site reliability engineering team developed a new approach framework, called Butterfly Effect, to automatically inject faults into cloud infrastructures.  Efficient execution trace processing using stream processing  Dynamic time-based fingerprinting to detect timeouts  Position and negative fingerprints for automated diagnosis and localization of user commands  Rely as much possible on open source and Python (see Python frameworks, libraries, software and resources)Research Groups and Initiatives  Reliable Software Systems (RSS) Group, Institute for Software Technology (ISTE)University of Stuttgart, Germany.  Resilient Computing Lab (RCL), University of Florence, Italy.  Software and Systems Engineering, University of Coimbra, Portugal.  Dependable Cloud Operations, Software Systems Research/NICTA, Australia.  InIT Cloud Computing Lab (ICCLab), Zurich, Switzerland.  ICT COST Action IC1304. Autonomous Control for a Reliable Internet of Services (ACROSS).  OpenStack Foundation  IFIP WG10.4 on Dependable Computing and Fault Tolerance  IEEE Reliability Society and IEEE Reliability Society at LinkedInConferences  IEEE International Conference on Cloud Computing (IEEE CLOUD).  IEEE International Conference on Cloud Engineering (IC2E).  International Conference on Cloud Computing and Services Science (CLOSER).  International Conference on Service-Oriented Computing (ICSOC)  IEEE International Conference on Utility and Cloud Computing (UCC)  Workshop on Resiliency in High Performance Computing (Resilience) in Clusters, Clouds, and GridsLiterature  Software Fault Injection by Jeffrey M. Voas and Gary McGraw.  Patterns of resilience by Uwe Friedrichsen  Site Reliability Engineering: How Google Runs Production Systems. Edited by Betsy Beyer, Chris Jones, Jennifer Petoff and Niall Richard Murphy.  How Complex Systems Fail by Richard I. Cook, MD Cognitive technologies Laboratory, University of Chicago (2000).",
            "link": "http://localhost:4000/research/cloud_reliability/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Enterprise Cloud Computing",
            "content": "Course DescriptionPrerequisites  Programming, operating systems, networks.Textbook  Distributed and Cloud Computing: From Parallel Processing to the Internet of Things, Kai Hwang, Jack Dongarra, Geoffrey C. Fox, Morgan Kaufmann, 2013.Learning OutcomesRecall (knowledge), interpret (comprehension), apply, analyse, create (synthesis), evaluate.      Understand the main concepts, key technologies, benefits, and characteristics of cloud computing.        Identify the architecture associated with cloud computing, including SaaS, PaaS, IaaS, public cloud, private cloud, and hybrid cloud.        Write a research paper and present the results.  Chapter 01 __ IntroductionSummary. The first chapter provides an introduction to the term ‘cloud’. What is the cloud? What is cloud Computing? Where is the cloud? Who is providing clouds? These are all questions you have probably heard and asked yourself. The term ‘cloud’ and ‘cloud computing’ is being used everywhere and often with a fuzzy meaning. Companies are quickly adopting cloud computing since it enables to outsource IT and allows to use the latest technologies without large invertment on infrastructure, software and IT staff. Examples of cloud services include Microsoft OfficeLive, DropBox, AppEngine, SalesForce VMforce, and Amazon EC2.Key points covered. What are cloud services? What is cloud computing? Business shift. Job market. Examples of cloud services.Material.  Lecture 1: Introduction.  Lab 1: Amazon AWS Hands-on.Chapter 02 __ ConceptsSummary. The second chapter covers important concepts which are fundamental to understand why cloud computing became so quickly widespread. One of the major benefits of the cloud comes for the economic model it delivers. Cloud service providers adopt a “pay as you go” or OpEx model which allows customers to pay only for what they use (similar to energy or waterwi). Customers do not need to own expensive assets (e.g., data centers, servers, or software), the CapEx. Naturally, the benefits of the cloud go beyond the economic model provided and also include additional positive aspects such as on-demand self-service, broad network access, and elasticity. Different types of software are made available to customers. While, nowadays, many classifications exist, one of the first taxonomies developed included only three main classes: Software as a Service (SaaS), Platform as a Service (PaaS), and Infrastructure as a Service (IaaS). Each type identifies which software is made available as a utility. For example, storage, hardware, servers, compilers and development environments, or office applications. Finally, cloud platform can be build for private use, these are called private clouds, or for public usage, these are called public clouds. A use of both types is called a hybrid cloud.Key points covered. Computing shift. Economical driver. Definition. Cloud characteristics. Deployment models. Delivery models. Examples. Inherent problems.Material.  Lecture: Cloud Computing Concepts.  Chapter 4: Cloud Computing Concepts (pp. 111-140). Mastering Cloud Computing: Foundations and Applications Programming, by Rajkumar Buyya, Christian Vecchiola, S.Thamarai Selvi, 2013.  Chapter 2: Electronic Services (pp. XX-XX). Fundamentals of Service Systems, Cardoso et al., Springer, 2015.  Lab 1: Amazon AWS: EC2.  Lab 2: Project Description.  Lab 2: Project Report Template.Chapter 03 __ Web APIsSummary. The dissemination and easy of use of web services and Application Programming Interfaces (API) has enables the edification of an API Economy. Companies can seamlessly work together by integrating their information systems using programming interfaces and provide they as web services. The technologies that made this possible live under the umbrella of distributed systems and correspond to two schools of thought: WS-* Services/SOAP and REST. WS-* Services and SOAP are based on traditional standards (XML, SOAP, HTTP, etc.) and REST where minimal middleware is necessary (only HTTP support is required). These two approaches provide the basic building blocks for cloud computing and are used by most platforms available in the market.Key points covered. The API Economy. Distributed Systems. WS-* Services. What is REST? REST and SOAP. REST principles. REST design guidelines.Material.  Lecture: Web API.  Lab 1: Boto and Amazon AWS.  Chapter 1: General Info (pp. 1-10). Python and AWS Cookbook by Mitch Garnaat, O’Reilly Media, 2011.  Chapter 2: EC2 Recipes (pp. 11-45). Python and AWS Cookbook by Mitch Garnaat, O’Reilly Media, 2011.  Chapter 3: S3 Recipes (pp. 47-63). Python and AWS Cookbook by Mitch Garnaat, O’Reilly Media, 2011.  Lab 2: REST and Django.  Chapter 4: Building a REST API (pp. 61-91). Lightweight Django by Julia Elman, Mark Lavin, O’Reilly Media, 2014.  Chapter 4: The Resource-Oriented Architecture (pp. 79-105). RESTful Web Services by Leonard Richardson and Sam Ruby, O’Reilly Media, 2007.Chapter 04 __ Cloud PlatformsSummary. Nowadays, there are three public cloud providers in field of IaaS: Amazon Web Services (AWS), Microsoft Azure, Google Cloud Platform, and IBM Bluemix. Other players are emerging. Examples include Open Telekom Cloud from Deutsche Telekom,  Telefonica’s Open Cloud, Alibaba, BT, NTT, Orange, Rackspace, Salesforce, etc. Amazon AWS is the leader by innovation and market share. Nonetheless, analysts believe that Microsoft Azure will soon overtake AWS. The AWS platform was launched in 2006. In 2016, it is composed of 35 Availability Zones (AZ) within 13 geographic Regions (e.g., Ireland, Frankfurt, Sao Paulo, Singapore, Tokyo, Sydney, Northern Virginia, Oregon). It has a rich spectrum of services from compute, storage, netowrking, analytics, mobile, developer tools, management tools, and security spaces. To programatically manage complex set ups in the AWS, several tools and and SDK libaries exist. For example, boto can be used to automate AWS services in Python. It allows to write scripts to provide programmatic connectivity to Amazon Web Services.Key points covered. Cloud Computing Offerings. AWS Platform (Compute Services, Storage Services, Communication Services, Additional Services). Tools and Kits. Billing and PricingMaterial.  Lecture: Cloud Platforms.  Chapter 9: Cloud Platforms in Industry (pp. 315-351). Mastering Cloud Computing: Foundations and Applications Programming, by Rajkumar Buyya, Christian Vecchiola, S.Thamarai Selvi, 2013.  Lab: Cloud Platforms: EC2, S3, SNS, SQS.  Overview of Amazon Web Services, Amazon AWS, Dec 31, 2015  AWS Simple Icons for Architecture Diagrams  AWS Essentials Student Guide 2.5, 2013.Chapter 05 __ Cloud Application DesignSummary. Cloud computing does not only provides a service-based access to virtual machines, more interestingly, it enables to create so called cloud-native applications. Applications that can be developed on a cloud platform, use the many resources available, run at scale with a high reliability, and avoid problems such as the Slashdot Effect. This requires new cloud architectures that depart from traditional enterprise application design to address requirements such as high availability, scalability, and elasticity. For example, IBM Cloud Architecture Center enables developers to understand how to quickly create new cloud native applications using Bluemix, IBM’s PaaS solution. The types of services provided by a cloud platform enable to develop architectures, e.g., with four tiers, which not easily engineered using traditional software platforms. Thus, architectures are evolving into Multitier architectures. Amazon AWS provides an infrastructure which contains the necessary ingredients to develop distributed system with high availability, scalability, and elasticity. Examples of key services include multiple zones, cloudwatch, auto-scaling, elastic load balancers, and message queues. To facilitate the development of native applications, companies and academia is looking into ways to identify and abstract generic architectures which can be reused across domains. Initiatives centered in patterns have been popular. Examples include, Microsoft Cloud Design Patterns, AWS Cloud Design Patterns, and the book Cloud Computing Patterns coming from the academia. Dependability, and in particular reliability, have gained importance since planet-scale cloud application need often to be available 24x7x52. Since native applications can be seen as complex systems with services, behavior, compositions, which are put together using an architectural style driven by decisions, existing concepts and theories from the field of software engineering can be used to evaluate the reliability of theories.Key points covered. Cloud-native applications. Cloud Architectures (One tier, Two tiers, Three tiers, Four tiers). High Availability Architectures. Scalable Architectures. AWS elements (EC2 Images, Elastic Load Balancing, Lunch Configurations, Auto Scaling Groups, Cloud Watch). Native cloud applications reliability.Material.  Lecture: Cloud Application Design.  Lab 1: Cloud Application Design.  Lab 2: Load Balancing.Chapter 06 __ Cloud BPMSummary.Key points covered. Cloud BPM. Concepts (Domains, workflows, activities, workers, deciders and schedulers). How to run a Workflow? Implementing Workflows.Material.  Lecture: Cloud BPM: Building Large-scale Distributed Systems.  Lab: Cloud BPM with AWS SWT.Chapter 07 __ NASummary.Key points covered:.Material.Chapter 08 __ Cloud BPMSummary.Key points covered. Cloud BPM. Workflows Patterns (Sequence, Parallel Split, Synchronization, Exclusive Choice, Simple Merge, Multi-Choice).Material.  Lecture: Cloud BPM: Workflow Patterns.  Lab: Cloud BPM: Workflow Patterns.Chapter 09 __ Google PlatformSummary.Key points covered:.Material.  Lecture: Google Cloud Platform and App Engine.  Lab: Google Cloud Platform and App Engine.Chapter 10 __ MonitoringSummary. Amazon CloudWatch. Architecture. Terms. Supported AWS Services. Accessing CloudWatch. Regions and Endpoints. CloudWatch Limits. Related AWS Services. Resources.Key points covered. Prometheus. OpenTracingMaterial.  Lecture: Cloud Monitoring: Amazon CloudWatch.Chapter 11 __ ResilienceSummary. Desciption from Charter on waking up at 2 in the morning and about INCREASIng the Covereage.Key points covered. Simian Army. Fault Injection.Material.  Lecture: Cloud Resilience: The Simian Army and Chaos Monkey.  DOST presentation  Using sequential diagnosis with openstackChapter 12 __ OpenStack PlatformSummary.Key points covered:.Material.  See slides from Pluralsight about Introduction To Openstack 2014  See course RedHat on OpenStack administration",
            "link": "http://localhost:4000/courses/enterprise_cloud_computing/",
            "date": null,
            "excerpt": null
        }
    

    

    
        ,{
            "title": "AIOps",
            "content": "## IntroductionIn planet-scale deployments, the Operation and Maintenance (O&M) of cloud platforms cannot be done any longer manually or simply with off-the-shelf solutions. It requires self-developed automated systems, ideally exploiting the use of AI to provide tools for autonomous cloud operations. We rely on deep learning, distributed traces, and time-series analysis to effectively detect and fix anomalous cloud infrastructure behaviors during operations to reduce the workload of human operators. The iForesight system is being used to evaluate new O&M and AIOps approaches. iForesight 3.0 is the result of 3 years of research with the goal to provide an intelligent new tool aimed at SRE cloud maintenance teams. It enables them to quickly detect and predict anomalies thanks to the use of artificial intelligence when cloud services are slow or unresponsive. ## ProblemExisting tools for monitoring IT infrastructures, networks and applications focus on collecting logs, metrics, events, and traces from distributed systems mainly for visualization and simple rule-based alerting.Nonetheless, the final goal of monitoring is to reach a level of technological development where we have tools that conduct root cause analysis with a high accuracy and enable to autonomously recover systems. To achieve this goal, we still need to shift from a data collection stage to an insight- and action-driven paradigm. One promising path to monitor planet- and large-scale platforms is to rely on advanced analytics and explore techniques from statistics, time-series analysis, data mining, natural language processing, graph processing, machine learning, and deep learning to extract insights from large volumes of monitoring data to support and drive recovery actions. ## ApproachThe mission of the **AIOps SRE team** (based in [Munich](https://www.muenchen.de/int/en.html), Germany) is to develop new systems and tools to analyze observability data from [Huawei Cloud](https://www.huaweicloud.com/en-us/about/about_us.html)to detect problems which impact customers, identify the root cause within seconds, and fix failures using the 1/5/10 rule (detection: 1 min, RCA: 5 min, recovery: 10 min).In 2017 we adopted AI in the form of [Data Science](https://en.wikipedia.org/wiki/Data_science) and [Machine Learning](https://en.wikipedia.org/wiki/Machine_learning) approaches for anomaly detection, root-cause analysis, fault prediction, and automated recovery into our suite. These techniques, including **statistical learning**, **time-series analysis**, **deep learning**, **big data**,**streaming**, and **data visualization**, enabled us to develop new production-ready services for troubleshooting Huawei Cloud and detect issues which were previously undetectable.The following figure from [Gartner](https://www.gartner.com/en) provides a high level architecture of the system we are building highliting the main areas of concern: + Real-time streaming and historical data, observations, [Big Data](https://en.wikipedia.org/wiki/Big_data), Machine Learning (ML), [Anomaly Detection](https://en.wikipedia.org/wiki/Anomaly_detection), [Root-Cause Analysis](https://en.wikipedia.org/wiki/Root_cause_analysis), [Performance Analysis](https://en.wikipedia.org/wiki/Application_performance_management), [Predictive Maintenance](https://en.wikipedia.org/wiki/Predictive_maintenance), and [Automation](https://en.wikipedia.org/wiki/Robotic_process_automation). The use of AI for production engineering can support the development of new approaches for: 1. Monitoring and alerting2. Anomaly detection and Root Cause Analysis3. Capacity planing and prediction4. Canarying validation5. Service Scaling6. Operational performanceOur work focuses on points 1) and 2). An AIOps platform architecture which runs AI algorithms consists of functional layers such as:1. *Big Data processing*. Real-time processing of streaming and historical data.2. *Data pipeline*. Connected data processing elements ingesting data from multiple sources.3. *Library of algorithms*: Statistical functions, classical machine learning, and deep learning algorithm.4. *Automation*. Use runbooks and RPA technology to automate repetitive tasks.5. *User interface*. Allows IT operations teams t interact with the platform and quickly identify issues and apply corrective actions.For 2019, our work focuses on points 1)-3). ## ChallengesThe challenges of operationalising AI are not limited to the understanding of deep learning or machine learning algorithms.Major challenges are related with software engineering, access and processing of large amounts of distributed data, model management, updating, deleting and training models on specialized GPUs and hardware, composition of workflowsfor orchestrating parallel jobs, and the visual management of models, workflows, and results. ## Huawei CloudHC, or Huawei Cloud, has planet-scale technical requirements. It has a [microservices](https://en.wikipedia.org/wiki/Microservices) architecture composed of hundreds of services.They are distributed over thousands of hosts in many geographical regions and operate with an availability higher than [five nines](https://en.wikipedia.org/wiki/High_availability). It was build on top of [OpenStack](https://docs.openstack.org/), an opensource cloud operating system.OpenStack controls large pools of compute, storage, and networking resources throughout tens of datacenters. The base services are predominantly written in Python and Java, and run on Linux. Huawei Cloud is one of the largest and fastest growing platforms in the world. It has a strong presence throughout the world with over 40 availability zones located across 23 geographical regions,ranging from Germany, France, South/Central America, Hong Kong and Russia to Thailand and South Africa.There are three properties that make platforms such as Huawei Cloud far more difficult to monitor and troubleshoot whencompared to other distributed systems:1. Amount of data and relationships which O&M teams need to analyze.2. Due to its distributed nature and complexity, system data has a low signal to noise ratio.3. Since many different subsystems interact together, semantically reconciliating data is difficult.The strongest challenge is its architecture design and operational complexity. Cloud deployments comprise thousands of geographically distributed services and microservices.These key building block components require a close monitoring:+ [API Gateways](https://microservices.io/patterns/apigateway.html) (e.g., [Kong](https://konghq.com))+ [Load Balancers](https://en.wikipedia.org/wiki/Load_balancing_(computing) (e.g., [HAProxy](http://www.haproxy.org))+ [Message Queuing Services](https://en.wikipedia.org/wiki/Message_queuing_service)(e.g., [RabbitMQ](https://en.wikipedia.org/wiki/RabbitMQ))+ [Distributed Caches](https://en.wikipedia.org/wiki/Distributed_cache) (e.g., [Redis](https://en.wikipedia.org/wiki/Redis))+ [Web Servers](https://en.wikipedia.org/wiki/Web_server)(e.g., [Apache](https://en.wikipedia.org/wiki/Apache_HTTP_Server))+ [Application Servers](https://en.wikipedia.org/wiki/Application_server) (e.g., [EJB](https://en.wikipedia.org/wiki/Enterprise_JavaBeans))+ [Database Servers](https://en.wikipedia.org/wiki/Database_server) (e.g., [MySQL](https://en.wikipedia.org/wiki/MySQL))+ [Linux Servers](https://en.wikipedia.org/wiki/Linux) + [Network Switches](https://en.wikipedia.org/wiki/Network_switch) and [Network Routers](https://en.wikipedia.org/wiki/Router_(computing)Besides these building blocks which are part of the base cloud infrastructure, service offerings also need to bemonitored:+ *Compute, network, storage*. Cloud servers, auto scaling, object storage, volume service, VPC network, and CDN, + *Databases*. MySQl, PostgreSQL, and replication service.+ *Security*. Vulnerability scan service, SSL management, and Anti-DDoS.+ *Applications*. APM, API Gateway, and application orchestration. + *Enterprise Intelligence*. Machine learning services, graph engines, face and image recognition, and Mapreduce.+ *DevCloud*. Project management, build, code hub, code check, and code release.### Data SourcesMonitoring data comes from many different data sources such hypervisors, OS, applications, application servers, middleware, databases, application logs, host and network metrics.Generally, data sources can be classified in four types:1. *Logs*. Service, microservices, and applications generate logs, composed of timestamped records with a structure and free-form text, which are stored in system files.2. *Metrics*. Examples of metrics include CPU load, memory available, and the response time of a HTTP request.3. *Traces*. Traces records the workflow and tasks executed in response to an HTTP request. 4. *Events*. Major milestones which occur within a data center can be exposed as events. Examples include alarms, service upgrades, and software releases.Google SRE team proposed [4 Golden Signals](https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/) which provide key insights on how a distributed system is running using metrics:+ *Latency*. Time to handle a request (aka response time)+ *Traffic*. How much demand is being placed on a system+ *Errors*. Rate of requests that fail+ *Saturation*. Constraints places on service resources Other proposals include the [RED](https://www.vividcortex.com/blog/monitoring-and-observability-with-use-and-red) and [USE](http://www.brendangregg.com/usemethod.html?source=post_page---------------------------) methods.When key services are not often called by users, the volume of metrics collected is insufficient for pattern recognition and anomaly detection.In such cases, [synthetic monitoring](https://en.wikipedia.org/wiki/Synthetic_monitoring) (also known as active monitoring) can be adopted and consists in creating artificial users to simulate user behavior by making automatedcalls to services. An AIOps platform needs to be able to ingest logs, metrics, traces, and events into efficient key-value databaseswhere they are stored to later be accessed and analyzed.### Pattern RecognitionThe objective of approaches for [pattern recognition](https://en.wikipedia.org/wiki/Pattern_recognition) is to detectpatterns in noisy and high-dimensionality data. Once the data is collected, we apply probabilistic algorithms, ML and other techniques to find suspicious patterns.Examples of patterns of interests include:+ Latency outliers and latency trends in metrics+ Gradual degradation of traffic and incoming calls+ Spikes or sudden change in error rate in logs+ Saturation of memory utilization \\>95% memory + Structural changes in tracesFor metrics, pattern recognition can rely on [feature-based time-series analysis](https://arxiv.org/abs/1709.08055) to identify interpretable insights of their structure.Patterns of interests are not always a synonym of an anomaly or a failure. Often, a pattern is associated with aprobability that something is possibly wrong. By correlating patterns from multiple data sources, we increase the confidence (precision and recall) that a failure is indeed under way.For example, we can autonomously identify anomalous microservices' latencies by dynamically choosingtemporal features, predict memory leaks ahead of time before impacting systems, or finding rare message entries in service logs with billions records. We applies all these techniques to real-time data streams.As another example, although distributed logging is a solved problem and many solutions already exist, what still needs to be mastered is the extraction of meaningful and actionable information from massive logs.While many argue that \"the more [data] the merrier\", in reality, the more log statements you have, the lessyou can find due to noise and non-determinism.With the success of developing pattern recognition for anomaly detection in 2017-2018, in 2019 we are planningthe next phase of our next-gen monitoring and troubleshooting suite. We will extend supported patterns by implementing new detector services for distributed trace and service logs.All the anomaly detectors contribute with results to a central knowledge repository of metric, trace, and log observations, and alarms and relevant external events (e.g., platform upgrades).### Inductive Inference While the patterns recognized correspond to the symptoms of an underlying problem, inductive inferenceexplores the problem space and tries to identify the faulty services or resources.Inductive reasoning draws a conclusion by gathering together particular observations (i.e., patterns discovered) in the form of premises and reasons from these particular premises to a general conclusion.Troubleshooting, root-cause analysis, tuning, and capacity planning are particular forms of inference.A [semi-supervised machine learning](https://en.wikipedia.org/wiki/Semi-supervised_learning) system will analyzean observed pattern repository to automatically infer complex incidents associated with failures and explain the underlying possible root-cause to SREs and operators. This inference will learn associations between patterns, alerts and external events which will be formalized as rules and stored in a [knowledge-based system](https://en.wikipedia.org/wiki/Knowledge-based_systems). On top, a smart assistant will help operators in making associations and decisions on the relationship between patterns, alerts and anomalies for [root-cause analysis](https://en.wikipedia.org/wiki/Root_cause_analysis).Several techniques can be for inductive inference , e.g.:+ Traffic analysis: Correlation between sudden increase in requests and slashdot effect, with increase latency of requests. + Trace analysis: Component or dependency failure, structural trace analysis, response time span analysis.+ Event analysis: Causality between upgrades, reconfigurations, and forklift replacements and failure.### RemediationOnce methods for pattern recognition and inference are mastered, the next step is to look into auto remediation. The first approach consists in running automated diagnostics scripts (runbooks) to troubleshoot and gain insights of the current state of components, services, or systems to, afterwards, conduct a manual remediation.As knowledge on failure modes is gained, failure patterns are identified and recovery is encoded into automated remediation scripts. Often, only simple failure cases can be handled but this constitute a very good starting point for more complex scenarios. Examples include rebooting a host, restarting a microservice or hung process, free disk space, and remove cached data. As knowledge on running systems accumulates, auto-remediation becomes pervasive to service owners which can define their own recovery actions.### AutomationIn practice, these three tasks -- pattern recognition, inference, and remediation -- are linked together to provide an end-to-end solution for O&M. For example, when pattern recognition identifies an HTTP endpoint with a high latency associated with an anomaly by analysing metrics, distributed traces are immediately analysed to reveal exactly which microservice or component is causing the problem.Its logs and context metrics are accessed to quickly diagnose the issue. Afterwards, when sufficient evidence characterizing the problem is collected, inference will nominate remediation actions to be executed.### EvaluationWe evaluate the techniques and algorithms we built using a 3-level approach:+ *Synthetics data*. We built models simulating microservice applications which are able to generate data under very specific conditions. The scenarios simulated are usually difficult to obtain when using testbeds and production systems. The controlled data enables a fine-grained understanding of how new algorithms behave and are an effective way for improvement and redesign.+ *Testbed data*. Once an algorithm passes the evaluation using synthetic data, we make a second evaluation using testbed data. We run an OpenSack cloud platform under normal utilization. Faults are injected into the platform andwe expect algorithms to detect anomalies, find their root cause, predict errors, and remediate failures.+ *Production data*. In the last step of the evaluation, we deploy algorithms in planet-scale production systems. This is the final evaluation in an environment with noise and which generally makes algorithms generate many false positives. Accuracy, performance and resources consumption is registered.Many public datasets are also available to conduct comparative studies:+ Anomaly detection datasets: [Harvard](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/OPQMVF),[Oregon State](https://ir.library.oregonstate.edu/concern/datasets/47429f155),[Numenta](https://github.com/numenta/NAB)+ Outliers datasets: [Stonybrook](http://odds.cs.stonybrook.edu/), [LMU](http://www.dbs.ifi.lmu.de/research/outlier-evaluation/),[ELKI](https://elki-project.github.io/datasets/outlier)+ Cluster datasets: [Alibaba clusterdata](https://github.com/alibaba/clusterdata),[Google Cluster Data](https://github.com/google/cluster-data)+ [Yahoo webscope](https://webscope.sandbox.yahoo.com/catalog.php?datatype=s&did=70&guccounter=1) + [Azure Public Dataset](https://github.com/Azure/AzurePublicDataset)+ [LogPai datasets](https://github.com/logpai/loghub/blob/master/README.md)+ [Timeseries classification](http://timeseriesclassification.com/dataset.php?train=&test=&leng=&class=&type=='sensor')## Tech StackAIOps does not only requires new methods and techniques from the fields of statistics and ML, but it also needs online and offline big data infrastructure (such as Hadoop, HBase, Spark, Gobblin, Presto) to ingest and process scale monitoring data which can reach several PB/day. For example, Facebook uses Presto for interactive queries over their 300PB data stores.iForesight is build using the following software stack and applications. + Frontend: Grafana, Jupyter, Node.js+ AI: Tensorflow, Keras, PyTorch, Pandas/NumPy, Scikit-learn, Huawei Model Arts+ Backend: Microservices, Docker, MySQL + Big Data: OpenTSDB, Hive, ArangoDB, HBase, Elastic Search, Spark Streaming. + Transport: Kafka+ Data sources: metrics, app logs, tracing, alarms, topologies, and change events+ Language: PythonIn 2019, we will closely following the progresses make in the following 5 fields to extend our stack and suite:+ [AIOps](https://blog.appdynamics.com/aiops/what-is-aiops/),[Service Mesh](https://www.nginx.com/blog/what-is-a-service-mesh/),[Istio](https://istio.io),[Distributed Tracing](https://opentracing.io/docs/overview/what-is-tracing/),[SRE](https://landing.google.com/sre/),[RPA](https://en.wikipedia.org/wiki/Robotic_process_automation)## Systems from Academia and Industry+ [Lightstep](https://lightstep.com),[Google StackDriver](https://cloud.google.com/trace/),[Amazon X-Ray](https://aws.amazon.com/xray/)+ [New Relic](https://newrelic.com/products/application-monitoring),[AppDynamics](https://www.appdynamics.com),[Dynatrace](https://www.dynatrace.com)+ [Azure Application Insights](https://docs.microsoft.com/en-us/azure/azure-monitor/app/cloudservices)+ [CA APM](https://www.ca.com/us/products/application-performance-monitoring.html)## Team and CultureSeveral researchers have contributed to iForesight, namely, llya Shakhat, Paul Staab, Wei Guangsheng, Jinxunmi,Sasho Nedelkoski, Alexander Wieder, Yi Feng, Florian Richter, Francesco del Buono, Phani Pawan, and Ankur Bhatia, among others.Our skill set encompasses expertise in the fields of AI/Data Science (Analytics), Software Engineering (Analysis, Design, Development, Testing), and Operation (Deployment, Infrastructure).Our culture of innovation and R&D is based on 4 main guiding principles:+ [DIY](https://en.wikipedia.org/wiki/Do_it_yourself),[KISS](https://pt.wikipedia.org/wiki/Keep_It_Simple),[Deep Work](https://www.amazon.com/gp/product/1455586692)*, [KPI-driven Research](https://en.wikipedia.org/wiki/Performance_indicator)*(Time Spent) x (Intensity of Focus)",
            "link": "http://localhost:4000/research/iforesight/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Home",
            "content": "I am Chief Architect for **Intelligent Cloud Operations (aka AIOps)** at **Huawei Munich Research Center** in Munich, Germany and **Huawei Ireland Research Center** in Dublin, Ireland.I am also Associate Professor at the [University of Coimbra](http://www.uc.pt/en/fctuc/dei) (Portugal), andaffiliated to the Information Systems Group.My current research involves the development of the **next generation of AI-driven IT Operations tools and platforms**.This field in nowadays generally called [AIOps](https://pt.slideshare.net/JorgeCardoso4/mastering-aiops-with-deep-learning) (artificial intelligence for IT operations).In planet-scale deployments, the Operation and Maintenance (O&M) of cloud platforms cannot be done any longer manuallyor simply with off-the-shelf solutions. It requires self-developed automated systems, ideally exploiting the use of AIto provide tools for autonomous cloud operations. My research looks into how **deep learning**, **machine learning learning**, **distributed traces**, **graph analysis**, **time-series analysis** (sequence analysis), and **log analysis** can be used to effectively **detect and localize anomalous cloud infrastructure behaviors** during operations to reduce the workload of human operators. These techniques are typically applied to Big Data coming from microservice [observability data](https://www.mstakx.com/wp-content/uploads/2018/09/A-Practical-Observability-Primer-1.pdf).My group is currently developing the iForesight system which is being used to evaluate this new O&M approach. [iForesight 3.0](research/iforesight) is the result of more than 2 years of research withthe goal to provide an intelligent new tool aimed at [SRE](https://en.wikipedia.org/wiki/Site_Reliability_Engineering)cloud maintenance teams. It enables them to quickly detect, localize and predict anomalies thanks to the use of artificial intelligence whencloud services are slow or unresponsive. The basic research areas we touch and integrate include:+ Cloud computing.+ Machine learning.+ Deep learning.+ Distributed systems.+ Software reliability.They are applied to create new and innovative systems for:+ AI-driven Cloud Operations+ Fault prevention, prediction, detection, localization, and recovery.  + Planet-scale monitoring of distributed systems+ Applied machine learning for predictive software maintenance+ Natural Language Processing for systems’ behaviour analysis.Previously I also looked into Cloud Computing, BPM, Semantic Web, Web Services, and Enterprise Systems.See [Google Scholar](https://scholar.google.de/citations?user=n9JFmAkAAAAJ&hl=en&oi=ao),[DBLP](http://dblp.uni-trier.de/pers/hd/c/Cardoso:Jorge), and[LinkedIn](https://www.linkedin.com/in/jorge-cardoso-75ba40/).Research Topics---------------1. Anomaly Detection techniques using AI/ML methods    * **Background.** Traditionally, anomaly detection research targeted to identify individual point anomalies in time series. Nonetheless, for planet-scale, complex systems such as Huawei Public Cloud, where noise and entropy are a constant, detecting collections of anomalous temporal events is far more relevant. \t    * **Objectives and Benefits.** This project seeks to use and evaluate recent neural networks developments from the field of AI and Machine Learning to detect collective, unusual, anomalous, temporal, machine generated events in Huawei Public Cloud. \t2. Intelligent predictive maintenance of Huawei Public Cloud    * **Background.** Predictive maintenance attempts to anticipate failures to allow for advance scheduling of corrective activities to prevent downtime and improving service quality for the customers.    * **Objectives and Benefits.** This research project seeks to develop new algorithms and approaches based on AI/ML for predicting Huawei Cloud failures by mining billion events which, while not designed for predicting failures, contain rich monitoring and operational information.\t3. Pattern Mining using a Data Science approach\t    * **Background.** Temporal pattern mining has been used effectively for finding patterns anticipating anomalies and anomaly detection in time series. Patterns capture periodic, burst, sequential, frequent, rare, and correlated events which can be associated with known or unknown symptoms.    * **Objectives and Benefits.** This research project seeks to explore new approaches for mining patterns for understanding the anomalies and critical events generated by Huawei Public Cloud, a complex, large-scale distributed system. The anticipated results should demonstrate the benefits of the approach in terms of learning accurately event models, which are a cornerstone for developing a new generation of intelligent cloud operations and maintenance systems.\t4. AIOps for the root-cause analysis of planet-scale cloud platforms    * **Background.** Traditional root-cause analysis techniques are not appropriate to process planet-scale microservice applications due to their dynamicity, high noise to signal ratio, and large scale.    * **Objectives and Benefits.** Use 1) advanced service management data, such as distributed traces and datacenter topology graphs; 2) reasoning constructs, such as correlation and causality, and 3) Machine Learning to identify multi-failure root causes of planet-scale cloud platforms.Open Positions--------------I currently have a few open positions for PhD students, postdocs, or professionals that would like to work with usto improve and extend with new ideas our system to release **iForesight 3.0**.+ Permanent position (Munich or Dublin): [AI / Machine Learning](research/pdf_img/JD_AI_Machine_Learning_Mun_Dub_(Jun_2019).pdf)+ Permanent position (Munich or Dublin): [SRE / AIOps Engineer – Planet-scale Clouds](research/pdf_img/JD_OpenStack_SRE_Dub_(Apr_2019).pdf)+ Permanent position (Munich or Dublin): [Openstack SRE Engineer – Planet-scale Clouds](research/pdf_img/JD_SRE_AIOps_Engineer_Dub_(Apr_2019).pdf)+ PhD Position/Postdoc: [AI-Driven Cloud Operations](research/pdf_img/PhD_Postdoc_Position_Intelligent_Cloud_Operations_2019-02-15.pdf)+ Permanent position: [Cloud Reliability Engineer](research/pdf_img/JD_IT_Cloud_Reliability_Engineer_(May 2016).pdf)+ Permanent position: [Junior/Senior Researcher Large-scale Distributed Systems](research/pdf_img/JD_IT_Junior_Senior_Researcher_Large-Scale_Distributed_Systems_(Jul 2016).pdf)News----+ Our AIOps article titled *Multi-source Distributed System Data for AI-Powered Analytics* was accepted to Service-Oriented and Cloud Computing (ESOCC 2020), 28-30 September, 2020, Crete.+ My Lecture on [AIOps: Anomalous Span Detection in Distributed Traces Using Deep Learning](https://www.slideshare.net/JorgeCardoso4/aiops-anomalous-span-detection-in-distributed-traces-using-deep-learning) presented at [Prof. Joeran Beel's Chair](https://www.scss.tcd.ie/joeran.beel/) (Intelligent Systems, Trinity College Dublin) on 02.10.2019 is now available.+ Our article *Towards Occupation Inference in Non-instrumented Services* was accepted to IEEE Network Computing and Applications. Boston, MA, USA, September 2019.+ Andre Pascoal Bento defended successfully his thesis [Observing and Controlling Performance in Microservices](research/pdf_img/MSc_thesis_Andre_Bento.pdf)+ Our article [Anomaly Detection from System Tracing Data using Multimodal Deep Learning](/publications/Papers/CP-2019-090-IEEECloud-Anomaly_Detection_from_System_Tracing_Data_and_MDL.pdf) was accepted to [IEEE Cloud 2019](http://conferences.computer.org/cloud/2019/), July 3-8, 2019, Milan, Italy. **(Acceptance Rate: 21%)**+ Our article *Assessing Software Development Teams Efficiency using Process Mining* was accepted to [International Conference on Process Mining](https://icpmconference.org), June 24-26, 2019, Aachen, Germany+ Our article [Anomaly Detection and Classification using Distributed Tracing and Deep Learning](/publications/Papers/CP-2019-089-CCGrid-Anomaly_Detection_and_Classification_using_DT_and_DL.pdf) was accepted to [CCGrid 2019](https://www.ccgrid2019.org/index.html), 14-17.05, 2019, Cyprus. **(Conference Rank: A)**+ Our article *On Black-Box Monitoring Techniques for Multi-Component Services* was accepted to [17th IEEE International Symposium on Network Computing and Applications (NCA)](http://www.ieee-nca.org/2018/), 1-3.10, 2018, Cambridge, US. **(Conference Rank: A)**+ Our article [Efficient Failure Diagnosis of OpenStack using Tempest](https://www.computer.org/csdl/mags/ic/2018/06/08509185-abs.html) was accepted for publication at IEEE Internet Computing **(Impact Factor 2018: 1.923)**.+ This year we are part of the Program Committee of [SREcon 2019](https://www.usenix.org/conference/srecon19emea/), 2–4 October, 2019, Dublin, Ireland.+ Jorge Cardoso [Mastering AIOps with Deep Learning](https://pt.slideshare.net/JorgeCardoso4/mastering-aiops-with-deep-learning), Presentation at [SRECon18](https://www.usenix.org/conference/srecon18europe), 29–31 August 2018, Dusseldorf, Germany.+ Georgia Kapitsaki, Josef Ioannou, Jorge Cardoso, Carlos Pedrinaci, \"Linked USDL Privacy: Describing Privacy Policies for Service\",  was published at the IEEE Inter. Conf. on Web Services (ICWS) **(Conference Rank: A)**, 2-7 July 2018, San Francisco, USA, 2018. + [International Industry-Academia Workshop on Cloud Reliability and Resilience](https://www.eitdigital.eu/news-events/events/article/international-industry-academia-workshop-on-cloud-reliability-and-resilience/), 7-8 November 2016, Berlin, Germany.+ José María García, Pablo Fernández, Carlos Pedrinaci, Manuel Resinas, Jorge Cardoso, Antonio Ruiz-Cortés, \"Modeling Service Level Agreements with Linked USDL Agreement\", IEEE Transactions on Services Computing **(Impact Factor 2016: 3.049)**, pp. 52-65, Volume: 10, Issue: 1, Jan.-Feb. 1 2017.+ José María García, Carlos Pedrinaci, Manuel Resinas, Jorge Cardoso, Pablo Fernández, Antonio Ruiz-Cortés. [Linked USDL Agreement: Effectively Sharing Semantic Service Level Agreements on the Web](/publications/Papers/CP-2015-079-Linked-USDL-Agreement.pdf), [The IEEE International Conference on Web Services (ICWS)](http://conferences.computer.org/icws/2015/), June 27 - July 2, 2015, New York, USA. **(Acceptance Rate: 17.4%)**+ Jorge Cardoso and Carlos Pedrinaci, [Evolution and Overview of Linked USDL](/publications/Papers/CP-2015-077-Linked-USDL-Evolution-and-Overview.pdf). 6th International Conference Exploring Services Science, IESS 2015, Porto, Portugal, February 4-6, 2015, LNBIP, Vol. 201, Novoa, Henriqueta, Dragoicea, Monica (Eds.), 2015.+ Cardoso, J., R Mans, PR da Cunha, W van der Aalst, H Berthold, [A framework for next generation e-health systems and services](/publications/Papers/CP-2015-080-Framework-e-health-systems.pdf) Proc. Amer. Conf. Inf. Syst. (AMCIS), pp. 1-11. 2015.  **(Conference Rank: A)**+ Pedrinaci, C.; Cardoso, J. and Leidig, T. [Linked USDL: A Vocabulary for Web-scale Service Trading](/publications/Papers/CP-2014-073-ESWC-Linked-USDL.pdf). In 11th Extended Semantic Web Conference (ESWC), Crete, Greece, 2014. (Acceptance Rate: 25%)+ Cardoso, J.; Binz, T.; Breitenbucher, Uwe; Kopp, O. and Leymann, F. [Cloud Computing Automation: Integrating USDL and TOSCA](/publications/Papers/CP-2013-068-CAISE-USDL-and-TOSCA.pdf). In 25th Conference on Advanced Information Systems Engineering (CAiSE  2013), pages 1-16, Springer, LNCS, Vol. 7908, 2013. **(Conference Rank: A; Acceptance rate: 16,6%)**+ Francesco Guerra (Chair) and Jorge Cardoso (Vice-Chair). [COST Action IC1302: semantic KEYword-based Search on sTructured data sOurcEs](http://www.keystone-cost.eu), 2013-2017.+ [ACM Calendar of Events](http://campus.acm.org/calendar/)+ [IEEE Conference Calls for Submissions](http://www.ieee.org/conferences_events/index.html)About me--------Jorge Cardoso his currently Chief Architect for **Intelligent Cloud Operations** at [Huawei Munich Research Center](http://www.huawei.eu/research-and-innovation) in Munich, Germany.I am also Associate Professor at the [University of Coimbra](http://www.uc.pt/en/fctuc/dei) (Portugal).Previously, he worked for several major companies such as [SAP Research](http://go.sap.com/) (Germany) on the Internet of Services, [The Boeing Company](http://www.boeing.com) in Seattle (USA) on Enterprise Application Integration and [CCG/Zentrum fur Graphische Datenverarbeitung]( http://www.ccg.pt/en/) on Computer Supported Cooperative Work.He has authored and co-authored more than 180 scientific publications and has been part of more than 120 program committees and organization bodies (journals and conferences). He his author/editor of 9 books. He holds 6 US and EU patents on process management and reliability engineering.[GoogleScholar](https://scholar.google.de/citations?user=n9JFmAkAAAAJ&hl=en) shows more than 8000 citations for his research work with an h-index of 43. His last book, titled [Fundamentals of Service Systems](http://www.springer.com/de/book/9783319231945) from Springer, compiles results from the research work of his areas of interest: cloud computing, business process management, semantic Web, the Internet of Services, and service engineering.He participated in European, German, US, and National research projects financed by the European Commission (FP7, EACEA), the German Ministry for Education and Research (BMBF), SAP Research (SAP) and Portuguese NSF (FCT). He is a founding member of the IFIP Working Group 12.7 on Social Semantics. He created and led until 2009 the development of the [W3C Unified Service Description Language (USDL)](https://github.com/linked-usdl).He has a Ph.D. from the [University of Georgia](https://www.uga.edu) (US, 2002) and a MSc and BSc in Informatics Engineering [University of Coimbra](univeristy of coimbra) (1995 and 1998, Portugal).Contact-------Prof. Jorge Cardoso+ [Huawei Munich Research Center](https://huawei.eu/research-and-innovation), Germany+ [Departamento de Engenharia Informatica](http://www.uc.pt/en/fctuc/dei), University of Coimbra, Portugaljcardoso [*.A._.T$] dei | uc | pt A good researcher says, \"Lets find out\", others say \"Nobody knows\". When a good researcher makes a mistake, he says,I was wrong\", others say \"It wasn't my fault\". A good researcher works harder than others and has more time. Others are always \"too busy\" to do what is necessary.  Unknown source",
            "link": "http://localhost:4000/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Research",
            "content": "## PhD, MSc, and Visiting PositionsIf you are curious about systems, want to be challenged and engage in cutting edge research, propose novel ideas not proposed before, and leave your own mark on the academic world, you are probably a good candidate for a PhD.While a MSc involve often involves the application of existing models and techniques, a PhD are almost totally independent and involve the creation of novel knowledge not know before. If you would like to do you PhD or Msc with our applied research group visit the following webpage [Phd/MSsc and visiting positions](phd_msc_visiting_positions).## AI-Driven OperationsSince 2016 my group is developing the [iForesight 3.0](iforesight) system which is being used to evaluate new O&M approaches. It is intelligent a new tool aimed at [SRE](https://en.wikipedia.org/wiki/Site_Reliability_Engineering)cloud maintenance teams. It enables them to quickly detect, localize and predict anomalies thanks to the use ofartificial intelligence when cloud services are slow or unresponsive. ## Cloud ReliabilityHuawei Cloud is one of the largest and fastest growing platforms in the world, with over 40 availability zones located across 23 geographical regions, ranging from Germany, France, South/Central America, Hong Kong and Russia to Thailand and South Africa. Thus, it is extremely important that our platform remain up at all times.In our research, we explored how [Chaos Engineering](https://en.wikipedia.org/wiki/Chaos_engineering), introduced by Netflix in 2011, could be used to improve the resiliency of our complex distributed systems.More information is available here: [Cloud Reliability](cloud_reliability) ## Service SystemsBetween 2012-2015, we did research on service systems. Namely, service description languages (with the USDL family), service system modeling (with the LSS USDL language), service analytics (using process mining), and service networks (using principals from social networks). Results of our results are available here: [Service Systems](service_systems).## Past ProjectsOver the years we have participated in many projects: [Past Projects](past_projects).## StudentsAll the students that worked with us is available at [Past Students](students).",
            "link": "http://localhost:4000/research/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Publications",
            "content": "Journal ArticlesBhatia, A.; Gerndt, M. and Cardoso, J. Efficient Failure Diagnosis of OpenStack Using Tempest.  In IEEE Internet Computing, Vol. 22 (6): 61-70, 2018.   Garc&iacute;a, J. M.; Fernandez, P.; Pedrinaci, C.; Resinas, M.; Cardoso, J. and Cort&eacute;s, A. R. Modeling Service Level Agreements with Linked USDL Agreement.  In IEEE Transactions on Services Computing, Vol. 10 (1): 52-65, 2017.   Cardoso, J.; Pedrinaci, C.; Leidig, T.; Rupino, P. and Leenheer, P. D Foundations of Open Semantic Service Setworks.  In International Journal of Service Science, Management, Engineering, and Technology, Vol. 4 (2): 1-16, 2013.   Leenheer, P. D; Cardoso, J. and Pedrinaci, C. Business Service Semantics: Case Study for Flanders Research Information Space.  In International Journal of Information System Modeling and Design (IJISMD), Vol. - (-): -, 2013.   Cardoso,  J. and Bussler,  C. Mapping between heterogeneous XML and OWL transaction representations in B2B integration.  In Data Knowl. Eng., Vol. 70 (12): 1046-1069, 2011.    Jung, J-Y.; Chin, C-H. and Cardoso, J. An entropy-based uncertainty measure of process models.  In Information Processing Letters, Vol. 111 (3): 135-141, 2011.   Terziyan, V.; Katasonov, A.; Cardoso, J.; Hauswirth, M. and Majumdar, A. PRIME: Proactive Inter-Middleware for Global Enterprise Resource Integration.  In Eastern-European Journal of Enterprise Technologies, Vol. 51 (3/12): 3-16, 2011.   Cardoso,  J. Business Process Control-Flow Complexity: Metric, Evaluation, and Validation.  In International Journal of Web Services Research, Vol. 5 (2): 49-76, 2008.   Cardoso,  J.; Bussler,  C. and Guerra,  F. Search Using Metadata, Semantics and Ontologies (Preface).  In International Journal of Metadata, Semantics and Ontologies, Vol. 3 (1): 1-2, 2008.   Rodrigues,  T.; Rosa,  P. and Cardoso,  J. Moving from Syntactic to Semantic Organizations using JXML2OWL.  In Computers in Industry, Vol. 59 (8): 808-819, 2008.   Cardoso,  J. Complexity Analysis of BPEL Web Processes.  In Journal of Software Process: Improvement and Practice (InterScience, Wiley), Vol. 12: 35-49, 2007.   Cardoso,  J. The Semantic Web Vision: Where Are We?.  In IEEE Intelligent Systems, Vol. 22 (5): 84-88, 2007.   Cardoso,  J. and Lange,  C. A Framework for Assessing Strategies and Technologies for Dynamic Packaging Applications in E-Tourism.  In Information Technology and Tourism (Cognizant Communication Corporation), Vol. 9 (1): 27-44, 2007.   Cravo,  G. and Cardoso,  J. Termination of Workflows A snapshot-based approach.  In Mathematica Balkanica, Vol. 21 (3-4), 2007.   Caires,  B. and Cardoso,  J. Using Semantic Web Technologies to Build Adaptable Enterprise Information Systems.  In Journal of Interoperability in Business Information Systems (IBIS), Vol. 1 (3): 41-58, 2006.   Cardoso, J. Approaches to Developing Semantic Web Services.  In International Journal of Computer Science (IJCS), Vol. 1 (1), 2006.   Cardoso,  J. Developing Dynamic Packaging Systems using Semantic Web Technologies.  In Transactions on Information Science and Applications, Vol. 3 (4): 729-736, 2006.   Cardoso,  J. Poseidon: A framework to assist Web process design based on business cases.  In International Journal of Cooperative Information Systems (IJCIS), Vol. 15 (1): 23-55, 2006.   Cardoso,  J. and Lenic,  M. Web Process and Workflow Path mining using the multimethod approach.  In International Journal of Business Intelligence and Data Mining (IJBIDM), Vol. 1 (3): 304-328, 2006.   Cardoso,  J.; Bostrom,  R. P. and Sheth,  A. Workflow Management Systems and ERP Systems: Differences, Commonalities, and Applications.  In Information Technology & Management, Vol. 5 (3/4): 319-338, 2004.   Cardoso,  J.; Miller,  J. A.; Sheth,  A.; Arnold,  J. and Kochut,  K. Quality of service for workflows and web service processes.  In Journal of Web Semantics, Vol. 1 (3): 281-308, 2004.   Anyanwu,  K.; Sheth,  A.; Cardoso,  J.; Miller,  J. A. and Kochut,  K. Healthcare Enterprise Process Development and Integration.  In Journal of Research and Practice in Information Technology, Special Issue in Health Knowledge Management, Vol. 35 (2): 83-98, 2003.   Cardoso,  J. and Sheth,  A. Semantic e-Workflow Composition.  In Journal of Intelligent Information Systems (JIIS), Vol. 21 (3): 191-225, 2003.   Kochut,  K.; Arnold,  J.; Sheth,  A.; Miller,  J. A.; Kraemer,  E.; Arpinar,  B. and Cardoso,  J. IntelliGEN: A Distributed Workflow System for Discovering Protein-Protein Interactions.  In Distributed and Parallel Databases, An International Journal, Special issue on Bioinformatics, Vol. 13 (1): 43-72, 2003.   Cardoso,  J.; Sousa,  J. P. and Teixeira,  J. C. SketchPad on the PowerMac.  In Computer Graphik Topics, Vol. 7 (4): 25-26, 1995. Book ChaptersFromm, H. and Cardoso, J. Foundations.  In Fundamentals of Service Systems, pages 1-32, Springer, 2015.   Cardoso, J. and Fromm, H. Electronic Services.  In Fundamentals of Service Systems, pages 33-74, Springer, 2015.   Feldmann, N. and Cardoso, J. Service Design.  In Fundamentals of Service Systems, pages 75-103, Springer, 2015.   Stadtmueller, S.; Cardoso, J. and Junghans, M. Service Semantics.  In Fundamentals of Service Systems, pages 137-178, Springer, 2015. Cardoso, J.; Hoxha, J. and Fromm, H. Service Analytics.  In Fundamentals of Service Systems, pages 179-215, Springer, 2015.   Cardoso, J.; Schmitz, B. and Kieninger, A. Service Research.  In Fundamentals of Service Systems, pages 325-357, Springer, 2015. Cardoso, J. and Pinto, A. M. The Web Ontology Language (OWL) and its Applications.  In Encyclopedia of Information Science and Technology, pages 754-766, Information Science Pub, 2015.   Bicer, V.; Borgert, S.; Winkler, M.; Scheithauer, G.; Voigt, K.; Cardoso, J. and Aitenbichler, E. Modeling Services using ISE Framework: Foundations and Extensions.  In Modern Software Engineering Concepts and Practices: Advanced Approaches, pages 126-150, Information Science Pub, ISBN: 1609602153, 2011.   Cardoso,  J.; Winkler,  M.; Voigt,  K. and Berthold,  H. IoS-Based Services, Platform Services, SLA and Models for the Internet of Services.  In Software and Data Technologies, pages 3-17, Springer Berlin Heidelberg, Communications in Computer and Information Science, Vol. 50, ISBN: 978-3-642-20116-5, 2011.   Cardoso,  J.; Aalst,  W. v. d.; Bussler,  C.; Sheth,  A. and Sandkuhl,  K. Inter-Enterprise System and Application Integration: A Reality Check.  In Enterprise Information Systems, pages 3-15, LNBI, Springer, ISBN: 978-3-540-88709-6, 2009.   Cardoso,  J.; Voigt,  K. and Winkler,  M. Service Engineering for The Internet of Services.  In Enterprise Information Systems, pages 15-27, Springer, ISBN: 978-3-642-00669-2 (Print) 978-3-642-00670-8 (Online), 2009.   Garc&ecirc;s,  R.; Jesus,  T. de; Cardoso,  J. and Valente,  P. Open Source Workflow Management Systems: A Concise Survey.  In 2009 BPM & Workflow Handbook, pages 179-190, Future Strategies Inc., Lighthouse Point, FL, USA, 2009.   Cardoso,  J. Applying Data Mining Algorithms to Calculate the Quality of Service of Workflow Processes.  In Intelligent Techniques and Tools for Novel System Architectures, pages 3-18, Springer Berlin / Heidelberg, Studies in Computational Intelligence, Vol. 109, ISBN: 978-3-540-77621-5, 2008.   Cardoso,  J. Semantics for E-Commerce Applications.  In Electronic Commerce: Concepts, Methodologies, Tools, and Applications, Information Science Reference, Pennsylvania, USA, ISBN: 978-1-59904-943-4, 2008.   Cardoso,  J. The Semantic Web: A mythical story or a solid reality.  In Metadata and Semantics, pages 253-257, Springer, Heidelberg, 2008.   Cardoso,  J. and Aalst,  W. v. d. Path Mining and Process Mining for Workflow Management Systems.  In Encyclopedia of Data Warehousing and Mining, Encyclopedia of Data Warehousing and Mining, pages 1489-1496, Information Science Reference, Pennsylvania, USA, ISBN: 978-1-60566-010-3, 2008.   Cardoso,  J.; Lytras,  M. and Hepp,  M. The Future of The Semantic Web For Enterprises.  In The Semantic Web: Real-World Applications from Industry, pages 3-15, Springer, Heidelberg, Germany, ISBN: 0-387-48530-9, 978-0-387-48530-0, 2008.   Cardoso,  J.; Miller,  J. A. and Emani,  S. Tutorial Lectures: Web Services Discovery Utilizing Semantically Annotated WSDL.  In 4th International Summer School 2008, Venice Italy, September 7-11, 2008, pages 240-268, Springer, Berlin/Heidelberg, 2008.   Cardoso,  J. Developing Course Management Systems Using Semantic Web Technologies.  In The Semantic Web: Real-World Applications from Industry, Springer, Heidelberg, Germany, ISBN: 0-387-48530-9, 978-0-387-48530-0, 2007.   Cardoso,  J. The Syntactic and the Semantic Web.  In Semantic Web Services: Theory, Tools and Applications, IGI Global, ISBN: 978-1-59904-045-5, 978-1-59904-047-9, 2007.   Escorcio,  L. and Cardoso,  J. Editing Tools for Ontology Construction.  In Semantic Web Services: Theory, Tools and Applications, IGI Global, ISBN: 978-1-59904-045-5, 978-1-59904-047-9, 2007.   Gouveia,  A. and Cardoso,  J. OWL: Web Ontology Language.  In Encyclopedia of Information Science and Technology, Information Science Reference, Pennsylvania, USA, 2007.   Patterson,  R.; Miller,  J. A.; Cardoso,  J. and Davis,  M. Bringing Semantic Security to Semantic Web Services.  In The Semantic Web: Real-World Applications from Industry, Springer, Heidelberg, Germany, ISBN: 0-387-48530-9, 978-0-387-48530-0, 2007.   Pennington,  C.; Cardoso,  J.; Miller,  J. A.; Patterson,  R. and Vasquez,  I. Introduction to Web Services.  In Semantic Web Services: Theory, Tools and Applications, IGI Global, ISBN: 978-1-59904-045-5, 978-1-59904-047-9, 2007.   Vanderfeesten,  I.; Cardoso,  J.; Mendling,  J.; Reijers,  H. and Aalst,  W. v. d. Quality Metrics for Business Process Models.  In Workflow Handbook 2007, pages 179-190, Future Strategies Inc., Lighthouse Point, FL, USA, ISBN: 0-9777527-1-2, 2007.   Cardoso,  J. Semantics for E-Commerce Applications.  In Encyclopedia of E-Commerce, E-Government, and Mobile Commerce, pages 979-984, Idea Group, ISBN: 9781591407997, 2006.   Cardoso,  J. Office Automation Systems.  In Encyclopedia of Medical Devices and Instrumentation (2 ed.), pages 149-160, Wiley Publishers, 2006.   Cardoso,  J. Developing an OWL Ontology for E-Tourism.  In Semantic Web Services, Processes and Applications, Springer, 2006.   Cardoso,  J. Programming the Semantic Web.  In Semantic Web Services, Processes and Applications, Springer, 2006.   Cardoso,  J. and Sheth,  A. The Semantic Web and its Applications.  In Semantic Web Services, Processes and Applications, Springer, ISBN: 0-38730239-5, 2006.   Cardoso,  J. Developing Dynamic Packaging Applications using Semantic Web based Integration.  In Semantic Web Technologies and eBusiness: Virtual Organization and Business Process Automation, Idea Group, Inc., ISBN: 1-59904-192-8, 1-59904-193-6, 2005.   Cardoso,  J. Path Mining in Web processes using Profiles.  In Encyclopedia of Data Warehousing and Mining, pages 896-901, Idea Group Inc., 2005.   Cardoso,  J. How to Measure the Control-flow Complexity of Web processes and Workflows.  In Workflow Handbook 2005, pages 199-212, Future Strategies Inc., Lighthouse Point, FL, USA, ISBN: 0-9703509-8-8, 2005.   Cardoso,  J. and Fernandes,  J. D. SEED: SEmantic E-tourism Dynamic packaging.  In Semantic Web Fact Book, pages 58-60, Joint Special Edition of AIS SIGSEMIS and OPEN RESEARCH SOCIETY, 2005.   Cardoso,  J.; Miller,  J. A.; Su,  J. and Pollock,  J. Academic and Industrial Research: Do their Approaches Differ in Adding Semantics to Web Services.  In LNCS, pages 14-21, Springer-Verlag, Heidelberg, Germany, 2005.   Cardoso,  J. and Sheth,  A. Introduction to Semantic Web Services and Web Process Composition.  In Semantic Web Service and Web Processes Conference, pages 1-13, Springer-Verlag, Heidelberg, Germany, ISBN: 3-540-24328-3, 2005.   Cardoso,  J.; Sheth,  A. and Miller,  J. A. Workflow Quality of Service.  In Enterprise Inter- and Intra-Organizational Integration - Building International Consensus, pages 303-312, Kluwer Academic Publishers, Boston, MA, USA, 2002.   In ProceedingsNedelkoski, S.; Bogatinovski, J.; Mandapati, A. K.; Becker, S.; Cardoso, J. and Kao, O. Multi-source Distributed System Data for AI-Powered Analytics.  In Service-Oriented and Cloud Computing (ESOCC 2020), 28-30 September, 2020, Crete, pages 161-176, 2020.   Filipe, R.; Correia, J.; Araujo, F. and Cardoso, J. Towards Occupation Inference in Non-instrumented Services.  In IEEE 18th International Symposium on Network Computing and Applications (NCA), pages 1-7, 2019.   Caldeira, J.; Reis, J.; Abreu, F. B. and Cardoso, J. Assessing Software Development Teams Efficiency using Process Mining.  In IEEE International Conference on Process Mining (ICPM), 2019.   Nedelkoski, S.; Cardoso, J. and Kao, O. Anomaly Detection and Classification using Distributed Tracing and Deep Learning.  In 19th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID), 2019.   Nedelkoski, S.; Cardoso, J. and Kao, O. Anomaly Detection from System Tracing Data using Multimodal Deep Learning.  In IEEE 12th International Conference on Cloud Computing (CLOUD), 2019.   Filipe, R.; Correia, J.; Araujo, F. and Cardoso, J. On Black-Box Monitoring Techniques for Multi-Component Services.  In 17th IEEE International Symposium on Network Computing and Applications (NCA), 2018.   Kapitsaki, G.; Ioannou, J.; Cardoso, J. and Pedrinaci, C. Linked USDL Privacy: Describing Privacy Policies for Service.  In IEEE International Conference on Web Services (ICWS), 2018. Correia, J.; Ribeiro, F.; Filipe, R.; Araujo, F. and Cardoso, J. Response Time Characterization of Microservice-Based Systems.  In IEEE 17th International Symposium on Network Computing and Applications (NCA), 2018.   Pina, F.; Correia, J.; Filipe, R.; Araujo, F. and Cardroom, J. Nonintrusive Monitoring of Microservice-based Systems.  In 17th IEEE International Symposium on Network Computing and Applications (NCA), 2018.   Lopes, B. L; Pedroso, A; Correia, J; Araujo, F; Cardoso, J and Paiva, R. P DataScience4NP - A Data Science Service for Non-Programmers.  In 10º Simposio de Informatica (INForum), 2018.   Pedroso, A; Lopes, B. L; Correia, J; Araujo, F; Cardoso, J and Paiva, R. P A Data Mining Service for Non-Programmers.  In 10th International Conference on Knowledge Discovery and Information Retrieval (KDIR), 2018.   Cardoso, J. Cloud Reliability: Decreasing outage frequency using fault injection.  In 9th International Workshop on Software Engineering for Resilient Systems (SERENE), 2017. Cardoso, J.; Mans, R.; Cunha, P. R. d; Aalst, W. v. de; Berthold, H. and Quaglini, S. A framework for next generation e-health systems and services.  In Twenty-first Americas Conference on Information Systems, Puerto Rico, 2015, 2015.   Garc&iacute;a, J. M.; Pedrinaci, C.; Resinas, M.; Cardoso, J.; Fernandez, P. and Cort&eacute;s, A. R. Linked USDL Agreement: Effectively Sharing Semantic Service Level Agreements on the Web.  In 2015 IEEE International Conference on Web Services, ICWS 2015, New York, NY, USA, June 27 - July 2, 2015, pages 137-144, 2015.   Fernandes, A. F.; Cardoso, J. and Marcelino, M. J. A Systematic Mapping Applied to MOOC's Study.  In CSEDU 2015 - Proceedings of the 7th International Conference on Computer Supported Education, Volume 2, Lisbon, Portugal, 23-25 May, 2015., pages 444-449, 2015.   Cardoso, J. and Pedrinaci, C. Evolution and Overview of Linked USDL.  In 6th International Conference Exploring Services Science (IESS 2015), Springer, LNCS, Vol. , 2015.   Macedo,  P.; Cardoso,  J. and Pinto,  A. M. Enriching Electronic Programming Guides with Web Data.  In Procs. of the Intl. Workshop on Linked Media (LiME 2014), 2014.   Goetz,  S.; Ilsche,  T.; Cardoso,  J.; Spillner,  J.; Kissinger,  T.; Assmann,  U.; Nagel,  W. and Schill,  A. Energy-Efficient Databases using Sweet Spot Frequencies.  In International Workshop on Green Cloud Computing (GCC), pages 871-876, 2014.   Goetz,  S.; Ilsche,  T.; Cardoso,  J.; Spillner,  J.; Assmann,  U.; Nagel,  W. and Schill,  A. Energy-Efficient Data Processing at Sweet Spot Frequencies.  In On the Move to Meaningful Internet Systems (OTM 2014), pages 154-171, Springer, LNCS, Vol. 8842, 2014.   Pedrinaci, C.; Cardoso, J. and Leidig, T. Linked USDL: A Vocabulary for Web-scale Service Trading.  In 11th Extended Semantic Web Conference (ESWC), Crete, Greece, 2014.   Nabais, J. C.; Cruz, A.; Pinto, A. M. and Cardoso, J. Interface Design for IT Service Management.  In 9th Iberian Conference on Information Systems and Technologies (CISTI), Barcelona, Spain, 2014.   Seiringer, W.; Hottum, P. and Cardoso, J. Increasing Accuracy of Service Costing using Customer Involvement.  In SIG SVC Delivering and Managing Services in Systems of Service Systems Workshop, Milano, Italy, 2013.   Cardoso, J. Open Service Networks: Research Directions.  In Proceedings of C3S2E'13, pages 2-3, 2013.   Cardoso, J. Modeling Service Relationships for Service Networks.  In 4th International Conference on Exploring Service Science (IESS 1.3), pages 114-128, Springer, Porto, Portugal, LNBIP, Vol. 143, 2013.   Cardoso,  J.; A. Miller,  J.; Bowman,  C.; Haas,  C.; P. Sheth,  A. and W. Miller,  T. Open Service Network Analysis.  In 1st International IFIP Working Conference on Value-Driven Social Semantics & Collective Intelligence (VaSCo), 2013.   Cardoso, J.; Binz, T.; Breitenb\"ucher, Uw; Kopp, O. and Leymann, F. Cloud Computing Automation: Integrating USDL and TOSCA.  In 25th Conference on Advanced Information Systems Engineering (CAiSE 2013), pages 1-16, Springer, LNCS, Vol. 7908, 2013.   Cardoso, J.; Jablonski, S. and Volz, B. A navigation metaphor to support mobile workflow systems.  In Second International Workshop on Theory and Applications of Process Visualization (TAProViz'13), pages 537-548, Springer, 2013.   Cardoso, J.; Pedrinaci, C. and Leenheer, P. D Open Semantic Service Networks: Modeling and Analysis.  In 4th International Conference on Exploring Service Science (IESS 1.3), pages 141-154, Springer, Porto, Portugal, LNBIP, Vol. 143, 2013.   Leenheer, P. D; Cardoso, J. and Pedrinaci, C. Ontological Representation and Governance of Business Semantics in Compliant Service Networks.  In 4th International Conference on Exploring Service Science (IESS 1.3), pages 155-169, Springer, Porto, Portugal, LNBIP, Vol. 143, ISBN: 978-3-642-36355-9, 2013.   Seiringer, W.; Cardoso, J. and Bischhoffshausen, J. K. vo Service System Analytics: Cost Prediction.  In 14th IFIP Working Conference on Virtual Enterprises (PRO-VE'13), Dresden, Germany, 30 Sep-2 Oct 2013., Springer, 2013. Seiringer,  W.; Hottum,  P. and Cardoso,  J. Increase Accuracy of Service Costing using Customer Involvement - An Application Scenario based on Service System Analytics.  In Proceedings of the SIG Service Workshop, Milan, Italy, 2013. Cardoso, J. and Miller, J. A Internet-Based Self-Services: from Analysis and Design to Deployment.  In The 2012 IEEE International Conference on Services Economics (SE 2012), IEEE Computer Society, Hawaii, USA, 2012.   Cardoso, J.; Pedrinaci, C.; Leidig, T.; Rupino, P. and Leenheer, P. D Open semantic service networks.  In The International Symposium on Services Science (ISSS 2012), pages 1-15, Leipzig, Germany, 2012.   Cardoso, J. and Rupino, P. Service Science: concepts, tools and platforms to support digital services for SME.  In Workshop on Enterprise Systems and Technology (I-WEST 2011), 2011.   S&aacute;nchez-Gonz&aacute;lez, L.; Ruiz, F.; Garc'ia, F. and Cardoso, J. Towards Thresholds of Control Flow Complexity Measures for BPMN models.  In 26th Symposium On Applied Computing (SAC 2011), pages 1445-1450, Taichung, Taiwan, 2011.   Cardoso,  J.; Barros,  A.; May,  N. and Kylau,  U. Towards a Unified Service Description Language for the Internet of Services: Requirements and First Developments.  In IEEE International Conference on Services Computing, IEEE Computer Society Press, Florida, USA, 2010.   Cardoso,  J. The Internet of Services.  In Proceedings of the 4th International Conference on Software and Data Technologies (ICSOFT 2009), pages IS7-IS10, Sofia, Bulgaria, ISBN: 978-989-674-009-2, 2009.   Cardoso,  J.; Winkler,  M. and Voigt,  K. A Service Description Language for the Internet of Services.  In First International Symposium on Services Science (ISSS'09), Leipzig, Germany, ISBN: 978-3-8325-2169-1, 2009.   Dividino,  R. Q.; Bicer,  V.; Voigt,  K. and Cardoso,  J. Integrating business process and user interface models using a model-driven approach.  In The 24th International Symposium on Computer and Information Sciences (ISCIS 2009), pages 492-497, IEEE, North Cyprus, 2009.   Gerke,  K.; Cardoso,  J. and Claus,  A. Measuring the Compliance of Processes with Reference Models.  In 17th International Conference on Cooperative Information Systems (CoopIS 2009), Springer, Algarve, Portugal, 2009.   Rol&oacute;n,  E.; Cardoso,  J.; Garc'ia,  F.; Ruiz,  F. and Piattini,  M. Analysis and Validation of Control-Flow Complexity Measures with BPMN Process Models.  In International Workshops on Business Process Modeling, Development and Support (BPMDS), Springer, Amsterdam, The Netherlands, 2009.   Spillner,  J.; Winkler,  M.; Reichert,  S.; Cardoso,  J. and Schill,  A. Distributed Contracting and Monitoring in the Internet of Services.  In 9th IFIP international conference on Distributed Applications and Interoperable Systems, pages 129-142, Springer, Lisbon, Portugal, 2009.   Cardoso,  J. Service Engineering for Future Business Value Networks.  In Tenth International Conference on Enterprise Information Systems (ICEIS 2008), pages 15-20, Barcelona, Spain, ISBN: 978-989-8111-37-1, 2008.   Kett,  H.; Voigt,  K.; Scheithauer,  G. and Cardoso,  J. Service Engineering in Business Ecosystems.  In Proceedings of the XVIII International RESER Conference, pages 1-22, Fraunhofer IRB, Stuttgart, Germany, 2008.   Vanderfeesten,  I.; Mendling,  J.; Reijers,  H.; Aalst,  W. v. d. and Cardoso,  J. On a Quest for Good Process Models: The Cross-Connectivity Metric.  In 20th International Conference on Advanced Information Systems Engineering (CAiSE 2008), pages 480-494, Springer, Montpellier, France, LNCS, Vol. 5074, ISBN: 978-3-540-69533-2, 2008.   Winkler,  M.; Cardoso,  J. and Scheithauer,  G. Challenges of Business Service Monitoring.  In Tenth International Conference on Information Integration and Web Based Applications & Services (iiWAS), ACM and Austrian Computer Society, Linz, Austria, 2008.   Caires,  B. and Cardoso,  J. Using Semantic Web and Service Oriented Technologies to Build Loosely Coupled Systems.  In 9th International Conference on Enterprise Information Systems (ICEIS 2007), pages 226-232, Funchal, Madeira, Portugal, 2007.   Cardoso,  J. Business Process Quality Metrics: Log-based Complexity of Workflow Patterns.  In International Conference on Cooperative Information Systems (CoopIS'07), Springer, Algarve, Portugal, 2007.   Cardoso,  J. Integrating HAD Organizational Data Assets using Semantic Web Technologies.  In 3rd International Conference Interoperability for Enterprise Software and Applications (I-ESA 2007), pages 333-344, Springer, Funchal, Portugal, ISBN: 978-1-84628-857-9, 2007.   Cravo,  G. and Cardoso,  J. Snapshot-Based Theory: An Interdisciplinary Approach.  In 1st Joint International Meeting between the American Mathematical Society and the New Zealand Mathematical Society, American Mathematical Society, Wellington, New Zealand, 2007. Gouveia,  M. and Cardoso,  J. Tourism Information Aggregation Using an Ontology based approach.  In 9th International Conference on Enterprise Information Systems (ICEIS 2007), pages 569-572, Funchal, Madeira, Portugal, 2007.   Hrastnik,  J. and Cardoso,  J. Integrating Heterogeneous Business Process Knowledge for Better Process Models.  In The Fifth International Conference on Quality and Reliability, John Wiley & Sons, Chiang Mai, Thailand, 2007. Hrastnik,  J. and Cardoso,  J. Business Process Knowledge Integration: A Semantic Based Approach.  In I-SEMANTICS '07 - 3rd International Conference on Semantic Technologies, within the TRIPLE-I conference, Springer, Graz, Austria, 2007.   Hrastnik,  J.; Cardoso,  J. and Kappe,  F. The Business Process Knowledge Framework.  In 9th International Conference on Enterprise Information Systems (ICEIS 2007), pages 517-520, Funchal, Madeira, Portugal, 2007.   Mendling,  J.; Reijers,  H. and Cardoso,  J. What Makes Process Models Understandable?.  In The 5th International Conference on Business Process Management (BPM 2007), pages 48-63, Brisbane, Australia, 2007.   Vanderfeesten,  I.; Cardoso,  J. and Reijers,  H. A weighted coupling metric for business process models.  In The 19th International Conference on Advanced Information Systems Engineering (CAiSE 2007), CAiSE Forum, Trondheim, Norway, 2007.   Cardoso,  J. Combining the Semantic Web with Dynamic Packaging Systems.  In International Conference on Artificial Intelligence, Knowledge Engineering and Databases (AIKED '06), pages 133-138, Madrid, Spain, ISBN: 960-8457-41-6, 2006.   Cardoso,  J. Process control-flow complexity metric: An empirical validation.  In IEEE International Conference on Services Computing (IEEE SCC 06), pages 167-173, IEEE Computer Society, Chicago, USA, ISBN: 0-7695-2670-5, 2006.   Cardoso,  J. Approaches to Compute Workflow Complexity.  In Dagstuhl Seminar Proceedings: The Role of Business Processes in Service Oriented Architectures, Internationales Begegnungs- und Forschungszentrum fuer Informatik (IBFI), Schloss Dagstuhl, Germany, 2006.   Cardoso,  J. Discovering Semantic Web services with and without a Common Ontology Commitment.  In The 3rd International Workshop on Semantic and Dynamic Web Processes (SDWP 2006), In conjunction with the 2005 IEEE International Conference Web Services (ICWS 2006), pages 183-190, IEEE Computer, Chicago, USA, ISBN: 0-7695-2681-0, 2006.   Cardoso,  J. Benchmarking a Semantic Web Service Architecture for Fault-tolerant B2B Integration.  In International Workshop on Dynamic Distributed Systems (IWDDS), In conjunction with the 26th International Conference on Distributed Computing Systems (ICDCS), IEEE Computer Society, Lisboa, Portugal, ISBN: 0-7695-2541-5, 2006.   Cardoso,  J. Workflow Quality of Service Management using Data Mining Techniques.  In 3rd IEEE International Conference on Intelligent Systems (IEEE IS' 06), pages 479-782, IEEE Computer Society, University of Westminster, London, UK, ISBN: 1-4244-0196-8, 2006.   Cardoso,  J. Poseidon: Uma aplicacao de suporte ao desenho semi-automatico de workflows.  In XATA2006 XML: Aplicacoes e Tecnologias Associadas, pages 337-349, Portalegre, Portugal, ISBN: 972-99166-2-4, 2006.   Cardoso,  J. Semantic integration of Web services and peer-to-peer networks to achieve fault-tolerance.  In Special Session on Semantic Web Services: Theory and Applications, 2006 IEEE International Conference on Granular Computing, pages 796-799, IEEE Society, Atlanta, GA, USA, ISBN: 1-4244-0133-X, 2006.   Cardoso,  J. and Cravo,  G. Verifying the logical termination of workflows.  In 5th Annual Hawaii International Conference on Statistics, Mathematics and Related Fields, pages 330-346, Honolulu, Hawaii, USA, 2006.   Cardoso,  J.; Mendling,  J.; Neumann,  G. and Reijers,  H. A Discourse on Complexity of Process Models.  In BPI06 - Second International Workshop on Business Process Intelligence, In conjunction with BPM 2006, pages 115-126, Springer-Verlag, Berlin, Heidelberg, Vienna, Austria, 2006.   Cravo,  G. and Cardoso,  J. Termination of Workflows.  In MASSEE International Congress on Mathematics, pages 33-34, MASSEE Mathematical Society of South Eastern Europe, Paphos, Cyprus, ISBN: 9963-9277-0-X, 2006.   Cravo,  G. and Cardoso,  J. Verifying the Termination of Workflows.  In International Conference of Numerical Analysis and Applied Mathematics (ICNAAM), pages 85-88, Wiley-VCH Verlag, Crete, Greece, ISBN: 3-527-40743-X, 2006.   Rodrigues,  T.; Rosa,  P. and Cardoso,  J. Mapping XML to existing OWL ontologies.  In International Conference WWW/Internet 2006, pages 72-77, Spain, ISBN: 972-8924-19-4, 2006.   Schmeing,  T.; Cardoso,  J. and Fernandes,  J. D. Knowledge-based Dynamic Packaging Model.  In 3rd IEEE International Conference on Management of Innovation and Technology (ICMIT 2006), pages 1085-1089, IEEE Computer Society, Singapore, ISBN: 1-4244-0148-8, 2006.   Schmeing,  T.; Cardoso,  J. and Fernandes,  J. D. eTourism: The Knowledge-based Packaging Model.  In Workshop on Dynamic and Intelligent Configuration of Tourism Services, University of Twente, The Netherlands, 2006.   Silva,  B. and Cardoso,  J. Semantic Data Extraction for B2B Integration.  In International Workshop on Distributed Applications for B2B Integration (DABI 2006), In conjunction with the 26th International Conference on Distributed Computing Systems (ICDCS 2006), IEEE Computer Society, Lisboa, Portugal, ISBN: 0-7695-2541-5, 2006.   Cardoso,  J. Control-flow Complexity Measurement of Processes and Weyuker's Properties.  In 6th International Conference on Enformatika, pages 213-218, International Academy of Sciences, Budapest, Hungary, ISBN: 975-98458-7-3, 2005.   Cardoso,  J. About the Complexity of Teamwork and Collaboration Processes.  In IEEE International Symposium on Applications and the Internet (SAINT 2005), Workshop - Teamware: supporting scalable virtual teams in multi-organizational settings, pages 218-221, IEEE Computer Society, Trento, Italy, ISBN: 0-7695-2262-9, 2005.   Cardoso,  J. About the Data-Flow Complexity of Web Processes.  In 6th International Workshop on Business Process Modeling, Development, and Support: Business Processes and Support Systems: Design for Flexibility, pages 67-74, Porto, Portugal, ISBN: 972-752-077-4, 2005.   Cardoso,  J. E-Tourism: Creating Dynamic Packages using Semantic Web Processes.  In W3C Workshop on Frameworks for Semantics in Web Services, Innsbruck, Austria, 2005.   Cardoso,  J. Evaluating the Process Control-flow Complexity Measure.  In IEEE International Conference on Web Services (ICWS 2005), pages 803-804, IEEE Computer Society, Orlando, Florida, USA, ISBN: 0-7695-2409-5, 2005.   Cardoso,  J. On the Move to Semantic Web Services.  In 6th International Enformatika Conference, pages 13-24, International Academy of Sciences, Budapest, Hungary, ISBN: 975-98458-7-3, 2005.   Cardoso,  J. and Sheth,  A. Adaptation and Workflow Management Systems.  In International Conference WWW/Internet 2005, pages 356-364, Lisbon, Portugal, ISBN: 972-8924-02-X, 2005.   Correia,  M and Cardoso,  J. Aumento da resiliencia dos Web services com uma Infra-estrutura Peer-to-Peer.  In 6a Conferencia da Associacao Portuguesa de Sistemas de Informacao (CAPSI 2005), Braganca, Portugal, ISBN: 972-95246-3-7, 2005.   Cardoso,  J. Adaptive Algorithm to Predict the QoS of Web Processes and Workflows.  In International Conference on Computational Intelligence (ICCI 2004), pages 490-493, Istanbul, Turkey, ISBN: 975-98458-1-4, 2004.   Cardoso,  J. Issues of Dynamic Travel Packaging using Web Process Technology.  In International Conference e-Commerce 2004, pages 357-362, Lisbon, Portugal, ISBN: 972-98947-8-7, 2004.   Cardoso,  J. Extending Workflow Systems with QoS Management.  In International Conference on Computational & Experimental Engineering and Sciences, pages 599-604, Madeira, Portugal, 2004.   Cardoso,  J. Building workflows definitions based on business cases.  In First International Workshop on Computer Supported Activity Coordination (CSAC-2004), ICEIS 2004, 6th International Conference on Enterprise Information Systems, pages 3-12, Porto, Portugal, 2004.   Cardoso,  J. and Sheth,  A. Semantic Web Processes: Semantics Enabled Annotation, Discovery, Composition and Orchestration of Web Scale Processes.  In Fourth International Conference on Web Information Systems Engineering (WISE'03), pages 375, IEEE Computer Society, Roma, Italy, 2003.   Cardoso,  J. Composing e-Workflows using Syntactic, Operational and Semantic Information.  In International Conference WWW/Internet, pages 528-531, Cacilgrafica, Lisbon, Portugal, ISBN: 972-9027-53-6, 2002.   Cardoso,  J. and Sheth,  A. Process Quality of Service Specification.  In EI3-IC workshop at NIST, Gaithersburg, MD, USA, 2002.   Chandrasekaran,  S.; Silver,  G.; Miller,  J. A.; Cardoso,  J. and Sheth,  A. Web service technologies and their synergy with simulation.  In Proceedings of the 2002 Winter Simulation Conference (WSC'02), pages 606-615, San Diego, CA, USA, 2002.   Miller,  J. A.; Cardoso,  J. and Silver,  G. Using Simulation to Facilitate Effective Workflow Adaptation.  In Proceedings of the 35th Annual Simulation Symposium (ANSS'02), pages 177-181, IEEE Computer Society, San Diego, CA, USA, 2002.   Sheth,  A.; Cardoso,  J.; Miller,  J. A.; kochut,  K. and Kang,  M. Service-oriented Middleware.  In The 6th World Multiconference on Systemics, Cybernetics and Informatics (SCI 2002), pages 528-534, Orlando, FL, 2002. Sheth,  A.; Cardoso,  J.; Miller,  J. A.; Kochut,  K. and Kang,  M. QoS for Service-Oriented Middleware.  In 6th World Multiconference on Systemics, Cybernetics and Informatics (SCI'02), pages 528-534, Orlando, Florida, USA, 2002.   Cardoso,  J.; Luo,  Z.; Miller,  J. A.; Sheth,  A. and Kochut,  K. Survivability Architecture for Workflow Management Systems.  In Proceedings of the 39th Annual ACM Southeast Conference, pages 207-216, ACM Press, Athens, GA, USA, 2001.   Cardoso,  J. and Teixeira,  J. C. Empresa virtual: uma realidade.  In Encontro Nacional de Engenharia e Gest&atilde;o Industrial (ENEGI), Lisbon, Portugal, 1998.   Cardoso,  J. and Teixeira,  J. C. Workflow Management Systems: A Prototype for the University of Coimbra.  In 5th International Conference on Concurrent Engineering, pages 83-87, Tokyo, Japan, 1998.   BooksHelfert,  M.; Ferguson,  D.; Mendez Munoz,  V. and Cardoso,  J. Cloud Computing and Services Science.  Springer, ISBN: 978-3-319-62594-2, 2017. Cabello,  E.; Cardoso,  J.; Ludwig,  A.; Maciaszek,  L.A. and van Sinderen,  M. Software Technologies.  Springer, ISBN: 978-3-319-62569-0, 2017. Nguyen,  N.T.; Kowalczyk,  R.; Pinto,  A.M. and Cardoso,  J. Transactions on Computational Collective Intelligence XXVI.  Springer, 2017. Lorenz, P.; Cardoso, J.; Maciaszek,  L.A. and Sinderen, M. va Software Technologies.  Springer, 2016. Cardoso, J.; Fromm, H.; Nickel, S.; Satzger, G.; Studer, R. and Weinhardt, C. Fundamentals of Service Systems.  Springer, ISBN: 978-3-319-23195-2, pp. 357, 2015. &nbsp; Holzinger, A.; Cardoso, J.; Cordeiro, J.; Libourel,  T.; Maciaszek,  L.A. and Sinderen, M. va Software Technologies.  Springer, 2015. Cardoso, J.; Fromm, H.; Nickel, S.; Satzger, G.; Studer, R. and Weinhardt, C. Fundamentals of Service Systems.  Springer, 2015. Cardoso,  J.; Lopes,  R. and Poels,  G. Service Systems: Concepts, Modeling, and Programming.  Springer, Germany, ISBN: 978-3-319-10812-4, pp. 112, 2014. &nbsp; Aalst,  W. v. d. and Hee,  K. v. Gest&atilde;o de Workflows. Modelos, m&eacute;todos e sistemas (Translation by Cardoso, J.).  Coimbra University Press, Coimbra, Portugal, ISBN: 978-989-26-000-0, pp. 316, 2009. &nbsp; Cardoso,  J. and Aalst,  W. v. d. Handbook of Research on Business Process Modeling.  Information Science Reference, Hershey, PA, ISBN: 9781605662886 (hardcover) 9781605662893 (ebook), 2009. &nbsp; Cardoso,  J. Programa&ccedil;&atilde;o de Sistemas Distribu&iacute;dos em Java.  FCA, Lisboa, Portugal, ISBN: 978-972-722-601-6, pp. 384, 2008. &nbsp; Cardoso,  J. and Lytras,  M. Semantic Web Engineering in the Knowledge Society.  Information Science Reference, IGI Global, Hershey, New York, pp. 424, 2008. &nbsp; Cardoso,  J. Semantic Web Services: Theory, Tools and Applications.  Information Science Reference, New York, NY, USA, ISBN: 978-1-59904-045-5, 2007. &nbsp; Cardoso,  J.; Hepp,  M. and Lytras,  M. The Semantic Web: Real-World Applications from Industry.  Springer, Heidelberg, Germany, pp. 308, 2007. &nbsp; Cardoso,  J. and Sheth,  A. Semantic Web Services, Processes and Applications.  Springer, ISBN: 0-38730239-5, 2006. &nbsp; Conference ProceedingsCabello, E.; Cardoso, J.; Maciaszek, L. and Sinderen, M. va, ed. Proceedings of the 12th International Conference on Software Technologies.  SCITEPRESS, ISBN: 978-989-758-262-2, 2017. Ludwig, A.; Cabello, E.; Cardoso, J.; Maciaszek, L. and Sinderen, M. va, ed. Proceedings of the 11th International Joint Conference on Software Technologies, Volume 2: ICSOFT-PT.  SCITEPRESS, ISBN: 978-989-758-194-6, 2016. Ludwig, A.; Cabello, E.; Cardoso, J.; Maciaszek, L. and Sinderen, M. va, ed. Proceedings of the 11th International Joint Conference on Software Technologies, Volume 1: ICSOFT-EA. , ISBN: 978-989-758-194-6, 2016. Lorenz, P.; Sinderen, M. va and Cardoso, J., ed. ICSOFT-PT 2015 - Proceedings of the 10th International Conference on Software Paradigm Trends, Colmar, Alsace, France, 20-22 July, 2015.  SciTePress, ISBN: 978-989-758-115-1, 2015. Holzinger, A.; Cardoso, J.; Cordeiro, J.; Libourel, T.; Maciaszek, L. A and Sinderen, M. va, ed. Software Technologies - 9th International Joint Conference, ICSOFT 2014, Vienna, Austria, August 29-31, 2014, Revised Selected Papers.  Springer, Communications in Computer and Information Science, Vol. 555, ISBN: 978-3-319-25578-1, 2015. &nbsp; J., C.; Guerra,  F; Houben,  G.-J.; Pinto,  A.M. and Velegrakis,  Y., ed. Semantic Keyword-based Search on Structured Data Sources.  Springer, 2015. Cardoso, J.; Sinderen, M. va and Lorenz, P., ed. Proceedings of the 10th International Conference on Software Paradigm Trends.  SCITEPRESS, ISBN: 978-989-758-115-1, 2015. Holzinger, A.; Cardoso, J.; Cordeiro, J.; Sinderen, M. va and Mellor, S. J, ed. ICSOFT-PT 2014 - Proceedings of the 9th International Conference on Software Paradigm Trends, Vienna, Austria, 29-31 August, 2014.  SciTePress, ISBN: 978-989-758-037-6, 2014. Holzinger, A.; Cardoso, J.; Cordeiro, J.; Sinderen, M. va and Mellor, S., ed. Proceedings of the 9th International Conference on Software Paradigm Trends.  SCITEPRESS, ISBN: 978-989-758-037-6, 2014. Cardoso,  J., ed. Proceedings of the ICEIS 2008 Doctoral ConsortiumJCS. , Barcelona, Spain, ISBN: 978-989-8111-41-8, 2008. Filipe,  J.; Cordeiro,  J. and Cardoso,  J., ed. Enterprise Information Systems.  Springer, Berlin, Heidelberg, LNBIP, Vol. , ISBN: 978-3-540-88709-6, pp. 379, 2008. &nbsp; Cardoso,  J., ed. Proceedings of the ICEIS 2007 Doctoral Consortium. , Funchal, Madeira, Portugal, ISBN: 978-989-8111-04-3, 2007. Cardoso,  J.; Cordeiro,  J. and Filipe,  J., ed. Proceedings of the Ninth International Conference on Enterprise Information Systems (ICEIS 2007). , Funchal, Madeira, Portugal, ISBN: 978-972-8865-88-7, 2007. Cardoso,  J.; Cordeiro,  J. and Filipe,  J., ed. Proceedings of the Ninth International Conference on Enterprise Information Systems (ICEIS 2007). , Funchal, Madeira, Portugal, ISBN: 978-972-8865-89-4, 2007. Cardoso,  J.; Cordeiro,  J. and Filipe,  J., ed. Proceedings of the Ninth International Conference on Enterprise Information Systems (ICEIS 2007). , Funchal, Madeira, Portugal, ISBN: 978-972-8865-90-0, 2007. Cardoso,  J.; Cordeiro,  J. and Filipe,  J., ed. Proceedings of the Ninth International Conference on Enterprise Information Systems (ICEIS 2007). , Funchal, Madeira, Portugal, ISBN: 978-972-8865-91-7, 2007. Cardoso,  J.; Cordeiro,  J. and Filipe,  J., ed. Proceedings of the Ninth International Conference on Enterprise Information Systems (ICEIS 2007). , Funchal, Madeira, Portugal, ISBN: 978-972-8865-92-4, 2007. Cardoso,  J. and Sheth,  A., ed. Semantic Web Process: powering next generation of processes with Semantics and Web services.  Lecture Notes in Computer Science, Springer-Verlag, Heidelberg, pp. 147, 2005. &nbsp; Cardoso,  J. and Sheth,  A., ed. Proceedings of the 2nd International Workshop on Semantic and Dynamic Web Processes (SDWP 2005). In conjunction with the 2005 IEEE International Conference on Web Services (ICWS 2005). , Florida, USA, 2005. &nbsp; Technical ReportsCardoso, J. On the suitability of USDL for service description -- A case study of a telecom operator.  Technical Report UC-DEI-GSI-2012-02, Department of Engineering Informatics, University of Coimbra, Coimbra, Portugal, 2012. PhD ThesesCardoso,  J. Quality of Service and Semantic Composition of Workflows.  Ph.D. Thesis, University of Georgia, Department of Computer Science, Athens, GA, USA, 2002.   Master's ThesesCardoso,  J. Sistema Computorizado para a Automatizacao de Processos Organizacionais.  Master's Thesis, University of Coimbra, Department of Informatics Engineering, Coimbra, Portugal, 1998. Keynotes, invited talks, summer schoolsCardoso,  J. Service Engineering for The Internet of Service.  Porto Salvo, Portugal, 2009. Cardoso,  J. Process Management and Integration with SAP.  Ciudad Real, Spain, 2008. Cardoso,  J. Semantics in Applications.  Dresden, Germany, 2008. Cardoso,  J. Semantic Web Services and Semantic-based Service Engineering.  San Servolo Island, Venice, Italy, 2008. Cardoso,  J. ISE - Model-Driven Service Engineering.  Stavanger, Norway, 2008. Cardoso,  J. Using Semantics to Enhance B2B Integration.  Corfu, Greece, 2007.   Cardoso,  J. Where do the Semantic Web and SOA meet?.  Vienna, Austria, 2007.   Cardoso,  J. Quality Metrics for Business Processes.  Zaragoza, Spain, 2007. &nbsp; Cardoso,  J. Semantic Web Challenges.  University of Bergen, Norway, 2007. Cardoso,  J. BPQM: Theory and applications.  University of Ciudad Real, Spain, 2007. Cardoso,  J. Tools and applications to make organizational knowledge explicit for the Semantic Web.  University of Dresden, Germany, 2007. Cardoso,  J. Increasing your ROI by making your organizational knowledge explicit for the Semantic Web.  University of Koblentz, Germany, 2007. Cardoso,  J. Service Engineering.  Barcelona, Spain, 2007. Cardoso,  J. Business Process Quality Metrics.  Technical University of Eindhoven, The Netherlands, 2006. Jos&eacute; Carlos del Arco,  J. A. F. &. C. J. C. Presentaci&oacute;n. Los Servicios Web desde un punto de vista empresarial y acad&eacute;mico. , 2006, n� 183.   Cardoso,  J. trends for 2005. , 2005, AIS SIGSEMIS Bulletin, March 2005. Cardoso,  J. Semantic Web Services: Progress in 2004 and trends for 2005. , 2005, AIS SIGSEMIS Bulletin, March 2005.   Cardoso,  J. On the move to Semantic Web services.  Budapest, Hungary, 2005. Cardoso,  J.; Bussler,  C. and Sheth,  A. Lifecycle of Semantic Web Processes.  Porto, Portugal, 2005. Cardoso,  J. Semantic Web Processes and Ontologies for the Travel Industry. , 2004, AIS SIGSEMIS Bulletin, October 2004.   Cardoso,  J.; Curbera,  F. and Sheth,  A. Service Oriented Archiectures and Semantic Web Processes.  New York, USA, 2004.   Cardoso,  J. Semantic Web Services.  Rome, Italy, 2003. Cardoso,  J. and Sheth,  A. Semantic Web Processes.  Erfurt, Germany, 2003.   Cardoso,  J. Workflow Management Systems: Introduction and Research Issues.  Athens, USA, 2002. Cardoso,  J. Stochastic Workflow Reduction Algorithm.  University of Georgia, USA, 2002. &nbsp; Cardoso,  J.; Bussler,  C. and Sheth,  A. Semantic Web Services and Processes: Semantic Composition and Quality of Service.  Irvine, CA, USA, 2002.   Cardoso,  J. and Bussler,  C. MARATHON - Workflow Management System.  Seattle, WA, USA, The Boeing Company, 1999. &nbsp; ",
            "link": "http://localhost:4000/publications/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Books Published",
            "content": "{% for post in site.categories.books %}\t{% include post-grid-books.html %}{% endfor %}",
            "link": "http://localhost:4000/books/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Blog",
            "content": "  {% for post in site.categories.blog  %}       {{ post.title }}  ({{ post.date | date: \"%-d %B %Y\" }})    {% endfor %}",
            "link": "http://localhost:4000/blog/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Courses",
            "content": "##### Online Courses+ [AIOps](http://jorge-cardoso.github.io/courses/aiops/).+ [Enterprise Cloud Computing](http://jorge-cardoso.github.io/courses/enterprise_cloud_computing/).##### Course List+ KIT Service-Oriented Computing+ UC Service Engineering, Databases and Information Analysis, Information Systems, Organizational behavior, Information Systems Management, Human-Computer Interaction+ UMA Semantic Web, Distributed Systems, Computer Architecture, Enterprise Integration, Decision Support Systems, Information Systems Architecture, Technological Architecture of Information Systems, Information and Communication Technologies Applied to Tourism, Implementation and Control of Quality Initiative and Project Management, Requirements Specification and Modeling+ UG Introduction to Computing and Programming+ UPL Microprocessors,  Computer and Programming##### LegendUniversity of Coimbra, Portugal UC;Karlsruhe Institute of Technology (KIT), Germany KIT;University of Madeira, Portugal UMA;University of Georgia, USA UG;Polytechnic Institute of Leiria, Portugal UPL.",
            "link": "http://localhost:4000/courses/",
            "date": null,
            "excerpt": null
        }
    

    

    

    
        ,{
            "title": "Past Projects",
            "content": "Past Projects------------------------------###Semantic Domain SystemEnterprises have the need to communicate. In business to business applications, usually XML is used to automatically exchange information. But sometimes more semantics is needed. Enterprises  also need to share concepts, terms, definitions and relationships (between concepts) relevant to their business activities.Why are developing the Semantic Domain System which is a systems that follows similar concepts from the DNS.The Domain Name System or DNS, is a service where relationships between IP addresses and physical domains are stored.When you request your browser, email client, ftp client or any other application to search for a specific domain,it automatically calls the DNS Server and finds the IP for the machine that offers the required service. It enablesthe use of names instead of IP addresses. Each company is responsible for maintaining their own IP addresses.In SDS, like in DNS, each company is responsible for managing their own concepts and is able to browse other companies'concept definitions. The system will allow a clear representation of concepts and relationships between concepts.###Semantic B2B IntegrationB2B integration, also known as external IS integration and e-business integration, has promised to automate andintegrate business processes and interactions between companies by considerably renovating the way business wasconducted with partners, suppliers, and customers. B2B integration is fundamentally about data and informationexchange among businesses and their information systems. The ability to interact and exchange information bothinternally and with external organizations (partners, suppliers, customers) is a fundamental issue in the enterprise sector.One simple solution that organizations have adopted to reach a higher level of integration relied on the use of XML as thelanguage to represent data. XML has become a de facto standard of B2B because of its simplicity, extensibility and ease ofprocessing. Today its estimated that most organizations use XML to store and transfer data. This is the reason why we createdB2BISS (Business-to-Business Integration using Syntactic-to-Semantic Mapping).### JXML2OWLToday's enterprises face critical needs in integrating disparate information spread over several data sources insideand even outside the organization. Semantic web technologies, such as ontologies, play an important role in the semanticintegration of data. The purpose of JXMLOWL is to present a framework to assist the semantic data integration process.The framework supports mappings and instances transformation from syntactic data sources in XML format to a commonglobal model defined by an ontology using semantic web related technologies such as OWL.### Business Process Quality MetricsOur intentions are twofold. On the one hand, we think it is fundamental to survey findings from neighboring disciplines onhow Business Process Quality Metrics can be developed. In particular, we believe that we can gather additional insights fromsoftware engineering, cognitive science, and graph theory and relate them to business process modeling. A further empiricalinvestigation might ultimately lead to establishing a complexity theory of business process models. On the other hand, we plan todemonstrate that these metrics serves their purpose, we plan to carry out several empirical validations by means of controlled experiments.### Other projects+ Process Control-Flow Analysis+ Semantic Dynamic Packaging (POSI/EIA/56164/2004).+ DME&nbsp;Web Site Development, Jos&eacute; Nelson Alves e Duarte Abreu.+ Poseidon: A tool for semi-automatic process design, Jose Miguel Rodrigues de Freitas and Luis Roberto Fernandes Faria.+ Web Services over Peer-to-Peer infrastructure, Martinho da Silva Correia.+ Quality of Service Management for METEOR Workflow Management System, University of Georgia, GA, USA.+ Semantic e-Workflow Composition for METEOR Workflow Management System, University of Georgia, GA, USA.+ MARATHON Workflow Management System, Jorge Cardoso and Christoph Bussler, Boeing Company, July 1999, WA, USA.+ SketchPad, CCG/ZGDV - Centro de Computa&ccedil;&atilde;o Gr&aacute;fica and IGD/Darmstadt, Germany+ DiagLactato 2.0: An Expert System for Healthcare, 1994.+ CUCo - Comunicar Utilizando o Computador, Projecto Minerva, Universidade de Coimbra, 1994.+ Puzzle Quiz, Projecto Minerva, Universidade de Coimbra, 1992.+ Task Game, Projecto Minerva, Universidade de Coimbra, 1991.",
            "link": "http://localhost:4000/research/past_projects/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "PhD, MSc, and Visiting Positions",
            "content": "Thanks for your interest in working with our applied research group at the [Huawei Munich Research Center](https://huawei.eu/research-and-innovation) or at the [University of Coimbra](https://www.uc.pt/en). Our group has a special in interested in the following fields:+ AI applied to cloud operations (AIOps)+ Planet-scale cloud computing.+ Machine learning.+ Distributed systems.+ Other fields (see my [Google Scholar profile](https://scholar.google.com/citations?user=n9JFmAkAAAAJ&hl=en)).Our group thrives to see the larger picture, be innovative and creative, and drive to make a lasting impact on planet-scale distributed system design and software systems. *We can't solve problems by using the same kind of thinkingwe used when we created them* -- Einstein.We are always looking forward to work with excellent researchers which:+ Simplify the complexity of existing technical solutions (KISS principle) + Solve difficult technical problems (DIY principle)+ Focus on the solution, not the obstacle+ Translate theory into practicePhD/MSc-------If need more information explaining what a PhD/MSc thesis is about, you can browse over the following links:+ [Writing a Thesis Proposal](http://sydney.edu.au/stuserv/documents/thesisproposal.pdf), Learning Centre, University of Sydney.+ [How to write a great research paper](http://research.microsoft.com/en-us/um/people/simonpj/papers/giving-a-talk/writing-a-paper-slides.pdf), by Simon Peyton Jones at Microsoft Research.+ [The Ten Commandments for writing academic papers](The_Ten_Commandments.pdf), by Julienne Hanson, Bartlett School of Architecture, London.+ [Understanding Science 101](http://undsci.berkeley.edu/article/0_0_0/us101contents_01), University of California, Berkeley, US.+ [Academic Writing and Publishing: A Practical Handbook](https://www.amazon.co.uk/Academic-Writing-Publishing-Practical-Handbook/dp/0415453224), by James Hartley.A list of students that I worked with me over the years can be found [here](students).The projects I was involved can be found here: [past projects](past_projects).Visiting Positions------------------We are also open to host academic visitors (students or faculty).If you are interested in a PhD/MSc student position or in a visiting position, please [send me an e-mail](mailto:jcardoso@dei.uc.pt) with your application.  ```textJorge CardosoIntelligent Cloud Operations @ Munich Research Center2019.01.25```",
            "link": "http://localhost:4000/research/phd_msc_visiting_positions/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Service Systems",
            "content": "Service Systems---------------Our recent research places emphasis on three fields: service description languages (with the USDL family), service system modeling (with the LSS USDL language), service analytics (using process mining), and service networks (using principals from social networks).### Service AnalyticsCurrently, I am working on Service Analytics. We analyse large logs from IT service provisioning (e.g., ITIL) to find human behaviour patterns which are rewarded or penalized. Interesting work. It is the new challenge for companies, the future so to say: to analyse people behaviour... My new upcoming book on Service Systems  Fundamentals/Springer will have a chapter dedicated to the topic.### Service DescriptionsLinked USDL (Unified Service Description Language) enables describing business, software, or real-world services using computer-readable and computer-understandable specifications to make them tradable on the web/Internet. It uses RDFS to provide a shared model. Check Github and linked-usdl.orgBellow is an earlier video explaining the goal of USDL (please note that since then, XML has been replaced by RDFS).### Service SystemsThe Linked Service System model for the Unified Service Description Language (LSS-USDL) explores the development of lightweight semantic models to capture the essence of service systems. Real service systems can be modeled with LSS-USDL, they can be accessed and queried programmatically, and they can be annotated with background knowledge. Check Github and this recent book Service Systems.The graphical artifact used to create interactions for service systems using the LSS USDL model:This approach provides descriptions that can be used for service management, optimization, and analytics.+ Jorge Cardoso, Ricardo Lopes, and Geert Poels. [Conceptual Frameworks](/publications/Papers/CH-2014-Service-Systems-Conceptual-Frameworks.pdf), in Service Systems: Concepts, Modeling, and Programming, Springer, 2014.+ Jorge Cardoso, Ricardo Lopes, and Geert Poels. [The LSS-USDL Model](/publications/Papers/CH-2014-Service-Systems-The-LSS-USDL-Model.pdf), in Service Systems: Concepts, Modeling, and Programming, Springer, 2014.### Service NetworksSocieties are becoming increasingly service-oriented. Service revenues from companies, such as Rolls Royce, Caterpillar, and ThyssenKrupp, often reach more than 35\\% of total sales. In the field of information technology, the global spending on cloud services is expected to grow 40\\% over the next seven years. Despite these facts, services are still the least studied part of the economy.The observation that the power of service-based economies is no longer restricted to individual organizations, but spans across networks, is the main driver for conducting service network research. Networks play an important role in many application areas such as energy grid distribution and smart city planning. Service networks are a class of networks of emerging interest since worldwide economies are becoming increasingly connected. Nonetheless, while the economies of many countries are becoming service-oriented, very few studies on service networks exist.Understanding when, why, where, and how service networks function best is fundamental for the future because their analysis can provide an ``x-ray'' of service-based economies.",
            "link": "http://localhost:4000/research/service_systems/",
            "date": null,
            "excerpt": null
        }
    

    
        ,{
            "title": "Students",
            "content": "## Postdoc students+ Rodrigo Costa dos Santos, “Using PROM to Validate Process Model Similarity”, Postdoc, University of Coimbra, Portugal. (Supervisor: 2014-2015).## PhD students+ João Carlos Palmela Pinheiro Caldeira, Agile Software Development Process Mining: Discovery, Conformance Checking and Enhancement, University Institute of Lisbon (ISCTE), (co-supervisor with Fernando Brito e Abreu), 2015-(ongoing).+ Alexandre Furtado Fernandes, “Aprendizagem Ubíqua e Web Semântica no E-Learning”, PhD, University of Coimbra, Portugal, 2013-2017 (ongoing).+ Kateryna Rybina, \"Modelling the Live Migration Time of Virtual Machines\", Technical University of Dresden, Germany (external-supervisor with Alexander Schill), 2013-2016.+ Konrad Voigt, “Semi-automatic matching of heterogeneous model-based specifications”, PhD, SAP Research CEC Dresden and Technical University of Dresden, Dresden, Germany. November 2011. (SAP Research/Industry supervisor: 2007-2009)+ Matthias Winkler, “SLA management in the Internet of Services”, PhD, SAP Research CEC Dresden and Technical University of Dresden, Dresden, Germany. June 2010. (SAP Research/Industry supervisor: 2007-2009)+ Délia Canha Gouveia, “Modeling and Analyzing the Quality of Service of Workflows using Petri Nets”, University of Madeira. (Supervision: 2007-2009).+ Janez Hrastnik, “Improving business performance by applying knowledge management to process-oriented quality management”, University of Madeira. (Supervision: 2006-2008).## MSc students+ Artur Jorge de Carvalho Pedroso, Building Machine Learning Microservices for the Data Science for Non-Programmers Platform (with Prof. Filipe Araújo), 2018. + Bruno Leonel André Lopes, Data Science for Non-Programmers: Orchestration of Microservices and Graphical User Interface (with Prof. Filipe Araújo), 2018. + Fábio Figueiredo Pina, Monitoria de Arquiteturas de Micro-serviços (with Prof. Filipe Araújo and Prof. Rui Paiva), 2018. + Fábio de Carvalho Ribeiro, Elastic Microservices Platform (with Prof. Filipe Araújo and Prof. Rui Paiva), 2018. + Phani Pawan, Event correlation and analysis for fast Root Cause Analysis in OpenStack Clouds, Technical University of Munich (TUM), Munich, Germany, 2018.+ Ankur Bhatia, Increasing OpenStack reliability using fault injection, Technical University of Munich (TUM), Munich, Germany, 2017.+ Hugo Miguel Rijo Sousa da Conceição, Plataforma de Gestão de Importação, University of Coimbra, 2015. + António Pedro de Ferreira Lucas, Desenvolvimento de Plataforma Web para Gestão de Infantários, University of Coimbra, 2015.+ Daniel Alberto Guedes Barrigas, CloudAid2, University of Coimbra, 2014.+ Filipe João Vinagre Barata, SUnSET: On the suitability of USDL for service description – A case study of a telecom operator, University of Coimbra, 2013.+ Jorge Araujo, SMS: Semantic Mashups of Linked-USDL Services, University of Coimbra, 2013.+ Diana São Miguel, MOONRISE: Modeling Open Semantic Service Relationships, University of Coimbra, 2013.+ Pedro Macedo, MAYBE: MEO EPG Content Enrichment with External Information, University of Coimbra, 2013.+ Ricardo Lopes, LaNDLESS: Integrating Linked Data with Linked Services, University of Coimbra, 2013.+ João Casalta Nabais, InTeligent: Interoperable Telecommunications ITIL-compliant Services Management System, University of Coimbra, 2013.+ João Duro, ESOTERIC: Exploring domain specific industry verticals for USDL, University of Coimbra, 2013.+ Fernando Miguel Barreira da Fonseca, Implementação do CMMI DEV-Nível 2 na ISA, Master Thesis (Bolonha), University of Coimbra, 2012. (Academic Supervisor)+ Tiago Fael Matos, Plataformas de divulgação web e moveis, Master Thesis (Bolonha), University of Coimbra, 2012. (Co-supervisor)+ Filipe Lourenço, Data-Warehousing Critical Software, Master Thesis (Bolonha), University of Coimbra, 2011. (Academic Supervisor)+ Jorge Miguel Ribeiro Rama, Business Intelligence no Grupo PT, Master Thesis (Bolonha), University of Coimbra, 2010. (Academic Supervisor)+ João Pedro Almeida e Mendes, HIS: e-health innovation systems, Master Thesis (Bolonha), University of Coimbra, 2010. (Academic Supervisor)+ Marco Aurélio Godinho Borges, SilverLayer – Interface Multimédia para Catálogos Online, Master Thesis (Bolonha), University of Coimbra, 2009. (Academic Supervisor)+ Ana Lisete Nunes Escórcio, Developing an Ontology for e-Tourism using the Zachman Framework, Master Thesis (Pré-Bolonha), University of Madeira, 2008. (Supervisor)+ Miguel Bruno Lemos de Gouveia, Arquitectura Semântica para a Integração de Sistemas no Domínio do Turismo, Master Thesis (Pré-Bolonha), University of Madeira, 2008. (Supervisor)+ Bruno José de Sales Caires, Transparent Access to Relational, Autonomous and, Distributed Databases Using Semantic Web and Service Oriented Technologies, Master Thesis (Pré-Bolonha), University of Madeira, 2007. (Supervisor)## Pre-Bologna BSc (equiv. MSc)+ João Sobrinho, Advanced Applications for Management, Integration and Analysis of Medium/Small Companies, BSc, University of Madeira, 2006/07. (Supervisor)+ Daniel Teixeira, Advanced Applications for Management, Integration and Analysis of Medium/Small Companies, BSc, University of Madeira, 2006/07. (Supervisor)+ Eládio Miguel Ferreira Nóbrega, The SDS: Semantic Domain System, BSc, University of Madeira, 2006/07. (Supervisor)+ Elio Feliciano Temtem Cró, The SDS: Semantic Domain System, BSc, University of Madeira, 2006/07. (Supervisor)+ João Frederico Correia da Costa, GesTools – Sistema de gestão operacional e DataTools – Soluções de Gestão de Conhecimento, BSc, University of Madeira, 2006/07. (Supervisor)+ Duarte Abreu, Semantic Workflow Management Systems, BSc, University of Madeira, 2005/06. (Supervisor)+ Bruno Silva, Multi-Source Extractor/Wrapper for Semantic Dynamic Packaging, BSc, University of Madeira, 2005/06. (Supervisor)+ Tobias Schmeing, Semantic Dynamic Packaging Applications, University of Duisburg-Essen, Germany, BSc, 2005/06. (Supervisor)+ Toni Rodrigues, JXML2OWL – Java XML to OWL, BSc, University of Madeira, 2005/06. (Supervisor)+ João Pedro Costa de Sousa Rosa, JXML2OWL – Java XML to OWL, BSc, University of Madeira, 2005/06. (Supervisor)+ Martinho da Silva Correia, Web Services over Peer-to-Peer infrastructure, University of Madeira, 2004/05. (Supervisor)+ José Miguel Rodrigues de Freitas, Poseidon: A tool for semi-automatic process design, BSc, University of Madeira, 2004/05. (Supervisor)+ Luis Roberto Fernandes Faria, Poseidon: A tool for semi-automatic process design, BSc, University of Madeira, 2004/05. (Supervisor)",
            "link": "http://localhost:4000/research/students/",
            "date": null,
            "excerpt": null
        }
    

]
